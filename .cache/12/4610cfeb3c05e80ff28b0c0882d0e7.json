{"id":"node_modules/run-parallel-limit/index.js","dependencies":[{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\package.json","includedInParent":true,"mtime":1596143871560},{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\run-parallel-limit\\package.json","includedInParent":true,"mtime":1596059322587},{"name":"process","parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\run-parallel-limit\\index.js","resolved":"C:\\Users\\Tate\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nmodule.exports = runParallelLimit\n\nfunction runParallelLimit (tasks, limit, cb) {\n  if (typeof limit !== 'number') throw new Error('second argument must be a Number')\n  var results, len, pending, keys, isErrored\n  var isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = len = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = len = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) process.nextTick(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (err) isErrored = true\n    if (--pending === 0 || err) {\n      done(err)\n    } else if (!isErrored && next < len) {\n      var key\n      if (keys) {\n        key = keys[next]\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      } else {\n        key = next\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      }\n    }\n  }\n\n  var next = limit\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.some(function (key, i) {\n      tasks[key](function (err, result) { each(key, err, result) })\n      if (i === limit - 1) return true // early return\n    })\n  } else {\n    // array\n    tasks.some(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n      if (i === limit - 1) return true // early return\n    })\n  }\n\n  isSync = false\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/run-parallel-limit/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/run-parallel-limit/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}}],"sources":{"node_modules/run-parallel-limit/index.js":"module.exports = runParallelLimit\n\nfunction runParallelLimit (tasks, limit, cb) {\n  if (typeof limit !== 'number') throw new Error('second argument must be a Number')\n  var results, len, pending, keys, isErrored\n  var isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = len = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = len = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) process.nextTick(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (err) isErrored = true\n    if (--pending === 0 || err) {\n      done(err)\n    } else if (!isErrored && next < len) {\n      var key\n      if (keys) {\n        key = keys[next]\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      } else {\n        key = next\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      }\n    }\n  }\n\n  var next = limit\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.some(function (key, i) {\n      tasks[key](function (err, result) { each(key, err, result) })\n      if (i === limit - 1) return true // early return\n    })\n  } else {\n    // array\n    tasks.some(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n      if (i === limit - 1) return true // early return\n    })\n  }\n\n  isSync = false\n}\n"},"lineCount":66}},"error":null,"hash":"d35cc1862cc396484ec144f8c1efd149","cacheData":{"env":{}}}