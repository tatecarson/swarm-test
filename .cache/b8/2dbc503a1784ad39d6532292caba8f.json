{"id":"node_modules/videostream/mp4-remuxer.js","dependencies":[{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\package.json","includedInParent":true,"mtime":1596143871560},{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\videostream\\package.json","includedInParent":true,"mtime":1596059322599},{"name":"binary-search","loc":{"line":1,"column":19},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\videostream\\mp4-remuxer.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\binary-search\\index.js"},{"name":"events","loc":{"line":2,"column":29},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\videostream\\mp4-remuxer.js","resolved":"C:\\Users\\Tate\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\events\\events.js"},{"name":"mp4-stream","loc":{"line":3,"column":20},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\videostream\\mp4-remuxer.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mp4-stream\\index.js"},{"name":"mp4-box-encoding","loc":{"line":4,"column":20},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\videostream\\mp4-remuxer.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mp4-box-encoding\\index.js"},{"name":"range-slice-stream","loc":{"line":5,"column":33},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\videostream\\mp4-remuxer.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\range-slice-stream\\index.js"},{"name":"buffer","parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\videostream\\mp4-remuxer.js","resolved":"C:\\Users\\Tate\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst bs = require('binary-search')\nconst EventEmitter = require('events')\nconst mp4 = require('mp4-stream')\nconst Box = require('mp4-box-encoding')\nconst RangeSliceStream = require('range-slice-stream')\n\n// if we want to ignore more than this many bytes, request a new stream.\n// if we want to ignore fewer, just skip them.\nconst FIND_MOOV_SEEK_SIZE = 4096\n\nclass MP4Remuxer extends EventEmitter {\n  constructor (file) {\n    super()\n\n    this._tracks = []\n    this._file = file\n    this._decoder = null\n    this._findMoov(0)\n  }\n\n  _findMoov (offset) {\n    if (this._decoder) {\n      this._decoder.destroy()\n    }\n\n    let toSkip = 0\n    this._decoder = mp4.decode()\n    const fileStream = this._file.createReadStream({\n      start: offset\n    })\n    fileStream.pipe(this._decoder)\n\n    const boxHandler = headers => {\n      if (headers.type === 'moov') {\n        this._decoder.removeListener('box', boxHandler)\n        this._decoder.decode(moov => {\n          fileStream.destroy()\n          try {\n            this._processMoov(moov)\n          } catch (err) {\n            err.message = `Cannot parse mp4 file: ${err.message}`\n            this.emit('error', err)\n          }\n        })\n      } else if (headers.length < FIND_MOOV_SEEK_SIZE) {\n        toSkip += headers.length\n        this._decoder.ignore()\n      } else {\n        this._decoder.removeListener('box', boxHandler)\n        toSkip += headers.length\n        fileStream.destroy()\n        this._decoder.destroy()\n        this._findMoov(offset + toSkip)\n      }\n    }\n    this._decoder.on('box', boxHandler)\n\n  }\n\n  _processMoov (moov) {\n    const traks = moov.traks\n    this._tracks = []\n    this._hasVideo = false\n    this._hasAudio = false\n    for (let i = 0; i < traks.length; i++) {\n      const trak = traks[i]\n      const stbl = trak.mdia.minf.stbl\n      const stsdEntry = stbl.stsd.entries[0]\n      const handlerType = trak.mdia.hdlr.handlerType\n      let codec\n      let mime\n      if (handlerType === 'vide' && stsdEntry.type === 'avc1') {\n        if (this._hasVideo) {\n          continue\n        }\n        this._hasVideo = true\n        codec = 'avc1'\n        if (stsdEntry.avcC) {\n          codec += `.${stsdEntry.avcC.mimeCodec}`\n        }\n        mime = `video/mp4; codecs=\"${codec}\"`\n      } else if (handlerType === 'soun' && stsdEntry.type === 'mp4a') {\n        if (this._hasAudio) {\n          continue\n        }\n        this._hasAudio = true\n        codec = 'mp4a'\n        if (stsdEntry.esds && stsdEntry.esds.mimeCodec) {\n          codec += `.${stsdEntry.esds.mimeCodec}`\n        }\n        mime = `audio/mp4; codecs=\"${codec}\"`\n      } else {\n        continue\n      }\n\n      const samples = []\n      let sample = 0\n\n      // Chunk/position data\n      let sampleInChunk = 0\n      let chunk = 0\n      let offsetInChunk = 0\n      let sampleToChunkIndex = 0\n\n      // Time data\n      let dts = 0\n      const decodingTimeEntry = new RunLengthIndex(stbl.stts.entries)\n      let presentationOffsetEntry = null\n      if (stbl.ctts) {\n        presentationOffsetEntry = new RunLengthIndex(stbl.ctts.entries)\n      }\n\n      // Sync table index\n      let syncSampleIndex = 0\n\n      while (true) {\n        var currChunkEntry = stbl.stsc.entries[sampleToChunkIndex]\n\n        // Compute size\n        const size = stbl.stsz.entries[sample]\n\n        // Compute time data\n        const duration = decodingTimeEntry.value.duration\n        const presentationOffset = presentationOffsetEntry ? presentationOffsetEntry.value.compositionOffset : 0\n\n        // Compute sync\n        let sync = true\n        if (stbl.stss) {\n          sync = stbl.stss.entries[syncSampleIndex] === sample + 1\n        }\n\n        // Create new sample entry\n        const chunkOffsetTable = stbl.stco || stbl.co64\n        samples.push({\n          size,\n          duration,\n          dts,\n          presentationOffset,\n          sync,\n          offset: offsetInChunk + chunkOffsetTable.entries[chunk]\n        })\n\n        // Go to next sample\n        sample++\n        if (sample >= stbl.stsz.entries.length) {\n          break\n        }\n\n        // Move position/chunk\n        sampleInChunk++\n        offsetInChunk += size\n        if (sampleInChunk >= currChunkEntry.samplesPerChunk) {\n          // Move to new chunk\n          sampleInChunk = 0\n          offsetInChunk = 0\n          chunk++\n          // Move sample to chunk box index\n          const nextChunkEntry = stbl.stsc.entries[sampleToChunkIndex + 1]\n          if (nextChunkEntry && chunk + 1 >= nextChunkEntry.firstChunk) {\n            sampleToChunkIndex++\n          }\n        }\n\n        // Move time forward\n        dts += duration\n        decodingTimeEntry.inc()\n        presentationOffsetEntry && presentationOffsetEntry.inc()\n\n        // Move sync table index\n        if (sync) {\n          syncSampleIndex++\n        }\n      }\n\n      trak.mdia.mdhd.duration = 0\n      trak.tkhd.duration = 0\n\n      const defaultSampleDescriptionIndex = currChunkEntry.sampleDescriptionId\n\n      const trackMoov = {\n        type: 'moov',\n        mvhd: moov.mvhd,\n        traks: [{\n          tkhd: trak.tkhd,\n          mdia: {\n            mdhd: trak.mdia.mdhd,\n            hdlr: trak.mdia.hdlr,\n            elng: trak.mdia.elng,\n            minf: {\n              vmhd: trak.mdia.minf.vmhd,\n              smhd: trak.mdia.minf.smhd,\n              dinf: trak.mdia.minf.dinf,\n              stbl: {\n                stsd: stbl.stsd,\n                stts: empty(),\n                ctts: empty(),\n                stsc: empty(),\n                stsz: empty(),\n                stco: empty(),\n                stss: empty()\n              }\n            }\n          }\n        }],\n        mvex: {\n          mehd: {\n            fragmentDuration: moov.mvhd.duration\n          },\n          trexs: [{\n            trackId: trak.tkhd.trackId,\n            defaultSampleDescriptionIndex,\n            defaultSampleDuration: 0,\n            defaultSampleSize: 0,\n            defaultSampleFlags: 0\n          }]\n        }\n      }\n\n      this._tracks.push({\n        fragmentSequence: 1,\n        trackId: trak.tkhd.trackId,\n        timeScale: trak.mdia.mdhd.timeScale,\n        samples,\n        currSample: null,\n        currTime: null,\n        moov: trackMoov,\n        mime\n      })\n    }\n\n    if (this._tracks.length === 0) {\n      this.emit('error', new Error('no playable tracks'))\n      return\n    }\n\n    // Must be set last since this is used above\n    moov.mvhd.duration = 0\n\n    this._ftyp = {\n      type: 'ftyp',\n      brand: 'iso5',\n      brandVersion: 0,\n      compatibleBrands: [\n        'iso5'\n      ]\n    }\n\n    const ftypBuf = Box.encode(this._ftyp)\n    const data = this._tracks.map(track => {\n      const moovBuf = Box.encode(track.moov)\n      return {\n        mime: track.mime,\n        init: Buffer.concat([ftypBuf, moovBuf])\n      }\n    })\n\n    this.emit('ready', data)\n  }\n\n  seek (time) {\n    if (!this._tracks) {\n      throw new Error('Not ready yet; wait for \\'ready\\' event')\n    }\n\n    if (this._fileStream) {\n      this._fileStream.destroy()\n      this._fileStream = null\n    }\n\n    let startOffset = -1\n    this._tracks.map((track, i) => {\n      // find the keyframe before the time\n      // stream from there\n      if (track.outStream) {\n        track.outStream.destroy()\n      }\n      if (track.inStream) {\n        track.inStream.destroy()\n        track.inStream = null\n      }\n      const outStream = track.outStream = mp4.encode()\n      const fragment = this._generateFragment(i, time)\n      if (!fragment) {\n        return outStream.finalize()\n      }\n\n      if (startOffset === -1 || fragment.ranges[0].start < startOffset) {\n        startOffset = fragment.ranges[0].start\n      }\n\n      const writeFragment = (frag) => {\n        if (outStream.destroyed) return\n        outStream.box(frag.moof, err => {\n          if (err) return this.emit('error', err)\n          if (outStream.destroyed) return\n          const slicedStream = track.inStream.slice(frag.ranges)\n          slicedStream.pipe(outStream.mediaData(frag.length, err => {\n            if (err) return this.emit('error', err)\n            if (outStream.destroyed) return\n            const nextFrag = this._generateFragment(i)\n            if (!nextFrag) {\n              return outStream.finalize()\n            }\n            writeFragment(nextFrag)\n          }))\n        })\n      }\n      writeFragment(fragment)\n    })\n\n    if (startOffset >= 0) {\n      const fileStream = this._fileStream = this._file.createReadStream({\n        start: startOffset\n      })\n\n      this._tracks.forEach(track => {\n        track.inStream = new RangeSliceStream(startOffset, {\n          // Allow up to a 10MB offset between audio and video,\n          // which should be fine for any reasonable interleaving\n          // interval and bitrate\n          highWaterMark: 10000000\n        })\n        fileStream.pipe(track.inStream)\n      })\n    }\n\n    return this._tracks.map(track => {\n      return track.outStream\n    })\n  }\n\n  _findSampleBefore (trackInd, time) {\n    const track = this._tracks[trackInd]\n    const scaledTime = Math.floor(track.timeScale * time)\n    let sample = bs(track.samples, scaledTime, (sample, t) => {\n      const pts = sample.dts + sample.presentationOffset// - track.editShift\n      return pts - t\n    })\n    if (sample === -1) {\n      sample = 0\n    } else if (sample < 0) {\n      sample = -sample - 2\n    }\n    // sample is now the last sample with dts <= time\n    // Find the preceeding sync sample\n    while (!track.samples[sample].sync) {\n      sample--\n    }\n    return sample\n  }\n\n  _generateFragment (track, time) {\n    /*\n        1. Find correct sample\n        2. Process backward until sync sample found\n        3. Process forward until next sync sample after MIN_FRAGMENT_DURATION found\n        */\n    const currTrack = this._tracks[track]\n    let firstSample\n    if (time !== undefined) {\n      firstSample = this._findSampleBefore(track, time)\n    } else {\n      firstSample = currTrack.currSample\n    }\n\n    if (firstSample >= currTrack.samples.length) { return null }\n\n    const startDts = currTrack.samples[firstSample].dts\n\n    let totalLen = 0\n    const ranges = []\n    for (var currSample = firstSample; currSample < currTrack.samples.length; currSample++) {\n      const sample = currTrack.samples[currSample]\n      if (sample.sync && sample.dts - startDts >= currTrack.timeScale * MIN_FRAGMENT_DURATION) {\n        break // This is a reasonable place to end the fragment\n      }\n\n      totalLen += sample.size\n      const currRange = ranges.length - 1\n      if (currRange < 0 || ranges[currRange].end !== sample.offset) {\n        // Push a new range\n        ranges.push({\n          start: sample.offset,\n          end: sample.offset + sample.size\n        })\n      } else {\n        ranges[currRange].end += sample.size\n      }\n    }\n\n    currTrack.currSample = currSample\n\n    return {\n      moof: this._generateMoof(track, firstSample, currSample),\n      ranges,\n      length: totalLen\n    }\n  }\n\n  _generateMoof (track, firstSample, lastSample) {\n    const currTrack = this._tracks[track]\n\n    const entries = []\n    let trunVersion = 0\n    for (let j = firstSample; j < lastSample; j++) {\n      const currSample = currTrack.samples[j]\n      if (currSample.presentationOffset < 0) { trunVersion = 1 }\n      entries.push({\n        sampleDuration: currSample.duration,\n        sampleSize: currSample.size,\n        sampleFlags: currSample.sync ? 0x2000000 : 0x1010000,\n        sampleCompositionTimeOffset: currSample.presentationOffset\n      })\n    }\n\n    const moof = {\n      type: 'moof',\n      mfhd: {\n        sequenceNumber: currTrack.fragmentSequence++\n      },\n      trafs: [{\n        tfhd: {\n          flags: 0x20000, // default-base-is-moof\n          trackId: currTrack.trackId\n        },\n        tfdt: {\n          baseMediaDecodeTime: currTrack.samples[firstSample].dts\n        },\n        trun: {\n          flags: 0xf01,\n          dataOffset: 8, // The moof size has to be added to this later as well\n          entries,\n          version: trunVersion\n        }\n      }]\n    }\n\n    // Update the offset\n    moof.trafs[0].trun.dataOffset += Box.encodingLength(moof)\n\n    return moof\n  }\n}\n\nclass RunLengthIndex {\n  constructor (entries, countName) {\n    this._entries = entries\n    this._countName = countName || 'count'\n    this._index = 0\n    this._offset = 0\n\n    this.value = this._entries[0]\n  }\n\n  inc () {\n    this._offset++\n    if (this._offset >= this._entries[this._index][this._countName]) {\n      this._index++\n      this._offset = 0\n    }\n\n    this.value = this._entries[this._index]\n  }\n}\n\nfunction empty () {\n  return {\n    version: 0,\n    flags: 0,\n    entries: []\n  }\n}\n\nconst MIN_FRAGMENT_DURATION = 1 // second\n\nmodule.exports = MP4Remuxer\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/videostream/mp4-remuxer.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}}],"sources":{"node_modules/videostream/mp4-remuxer.js":"const bs = require('binary-search')\nconst EventEmitter = require('events')\nconst mp4 = require('mp4-stream')\nconst Box = require('mp4-box-encoding')\nconst RangeSliceStream = require('range-slice-stream')\n\n// if we want to ignore more than this many bytes, request a new stream.\n// if we want to ignore fewer, just skip them.\nconst FIND_MOOV_SEEK_SIZE = 4096\n\nclass MP4Remuxer extends EventEmitter {\n  constructor (file) {\n    super()\n\n    this._tracks = []\n    this._file = file\n    this._decoder = null\n    this._findMoov(0)\n  }\n\n  _findMoov (offset) {\n    if (this._decoder) {\n      this._decoder.destroy()\n    }\n\n    let toSkip = 0\n    this._decoder = mp4.decode()\n    const fileStream = this._file.createReadStream({\n      start: offset\n    })\n    fileStream.pipe(this._decoder)\n\n    const boxHandler = headers => {\n      if (headers.type === 'moov') {\n        this._decoder.removeListener('box', boxHandler)\n        this._decoder.decode(moov => {\n          fileStream.destroy()\n          try {\n            this._processMoov(moov)\n          } catch (err) {\n            err.message = `Cannot parse mp4 file: ${err.message}`\n            this.emit('error', err)\n          }\n        })\n      } else if (headers.length < FIND_MOOV_SEEK_SIZE) {\n        toSkip += headers.length\n        this._decoder.ignore()\n      } else {\n        this._decoder.removeListener('box', boxHandler)\n        toSkip += headers.length\n        fileStream.destroy()\n        this._decoder.destroy()\n        this._findMoov(offset + toSkip)\n      }\n    }\n    this._decoder.on('box', boxHandler)\n\n  }\n\n  _processMoov (moov) {\n    const traks = moov.traks\n    this._tracks = []\n    this._hasVideo = false\n    this._hasAudio = false\n    for (let i = 0; i < traks.length; i++) {\n      const trak = traks[i]\n      const stbl = trak.mdia.minf.stbl\n      const stsdEntry = stbl.stsd.entries[0]\n      const handlerType = trak.mdia.hdlr.handlerType\n      let codec\n      let mime\n      if (handlerType === 'vide' && stsdEntry.type === 'avc1') {\n        if (this._hasVideo) {\n          continue\n        }\n        this._hasVideo = true\n        codec = 'avc1'\n        if (stsdEntry.avcC) {\n          codec += `.${stsdEntry.avcC.mimeCodec}`\n        }\n        mime = `video/mp4; codecs=\"${codec}\"`\n      } else if (handlerType === 'soun' && stsdEntry.type === 'mp4a') {\n        if (this._hasAudio) {\n          continue\n        }\n        this._hasAudio = true\n        codec = 'mp4a'\n        if (stsdEntry.esds && stsdEntry.esds.mimeCodec) {\n          codec += `.${stsdEntry.esds.mimeCodec}`\n        }\n        mime = `audio/mp4; codecs=\"${codec}\"`\n      } else {\n        continue\n      }\n\n      const samples = []\n      let sample = 0\n\n      // Chunk/position data\n      let sampleInChunk = 0\n      let chunk = 0\n      let offsetInChunk = 0\n      let sampleToChunkIndex = 0\n\n      // Time data\n      let dts = 0\n      const decodingTimeEntry = new RunLengthIndex(stbl.stts.entries)\n      let presentationOffsetEntry = null\n      if (stbl.ctts) {\n        presentationOffsetEntry = new RunLengthIndex(stbl.ctts.entries)\n      }\n\n      // Sync table index\n      let syncSampleIndex = 0\n\n      while (true) {\n        var currChunkEntry = stbl.stsc.entries[sampleToChunkIndex]\n\n        // Compute size\n        const size = stbl.stsz.entries[sample]\n\n        // Compute time data\n        const duration = decodingTimeEntry.value.duration\n        const presentationOffset = presentationOffsetEntry ? presentationOffsetEntry.value.compositionOffset : 0\n\n        // Compute sync\n        let sync = true\n        if (stbl.stss) {\n          sync = stbl.stss.entries[syncSampleIndex] === sample + 1\n        }\n\n        // Create new sample entry\n        const chunkOffsetTable = stbl.stco || stbl.co64\n        samples.push({\n          size,\n          duration,\n          dts,\n          presentationOffset,\n          sync,\n          offset: offsetInChunk + chunkOffsetTable.entries[chunk]\n        })\n\n        // Go to next sample\n        sample++\n        if (sample >= stbl.stsz.entries.length) {\n          break\n        }\n\n        // Move position/chunk\n        sampleInChunk++\n        offsetInChunk += size\n        if (sampleInChunk >= currChunkEntry.samplesPerChunk) {\n          // Move to new chunk\n          sampleInChunk = 0\n          offsetInChunk = 0\n          chunk++\n          // Move sample to chunk box index\n          const nextChunkEntry = stbl.stsc.entries[sampleToChunkIndex + 1]\n          if (nextChunkEntry && chunk + 1 >= nextChunkEntry.firstChunk) {\n            sampleToChunkIndex++\n          }\n        }\n\n        // Move time forward\n        dts += duration\n        decodingTimeEntry.inc()\n        presentationOffsetEntry && presentationOffsetEntry.inc()\n\n        // Move sync table index\n        if (sync) {\n          syncSampleIndex++\n        }\n      }\n\n      trak.mdia.mdhd.duration = 0\n      trak.tkhd.duration = 0\n\n      const defaultSampleDescriptionIndex = currChunkEntry.sampleDescriptionId\n\n      const trackMoov = {\n        type: 'moov',\n        mvhd: moov.mvhd,\n        traks: [{\n          tkhd: trak.tkhd,\n          mdia: {\n            mdhd: trak.mdia.mdhd,\n            hdlr: trak.mdia.hdlr,\n            elng: trak.mdia.elng,\n            minf: {\n              vmhd: trak.mdia.minf.vmhd,\n              smhd: trak.mdia.minf.smhd,\n              dinf: trak.mdia.minf.dinf,\n              stbl: {\n                stsd: stbl.stsd,\n                stts: empty(),\n                ctts: empty(),\n                stsc: empty(),\n                stsz: empty(),\n                stco: empty(),\n                stss: empty()\n              }\n            }\n          }\n        }],\n        mvex: {\n          mehd: {\n            fragmentDuration: moov.mvhd.duration\n          },\n          trexs: [{\n            trackId: trak.tkhd.trackId,\n            defaultSampleDescriptionIndex,\n            defaultSampleDuration: 0,\n            defaultSampleSize: 0,\n            defaultSampleFlags: 0\n          }]\n        }\n      }\n\n      this._tracks.push({\n        fragmentSequence: 1,\n        trackId: trak.tkhd.trackId,\n        timeScale: trak.mdia.mdhd.timeScale,\n        samples,\n        currSample: null,\n        currTime: null,\n        moov: trackMoov,\n        mime\n      })\n    }\n\n    if (this._tracks.length === 0) {\n      this.emit('error', new Error('no playable tracks'))\n      return\n    }\n\n    // Must be set last since this is used above\n    moov.mvhd.duration = 0\n\n    this._ftyp = {\n      type: 'ftyp',\n      brand: 'iso5',\n      brandVersion: 0,\n      compatibleBrands: [\n        'iso5'\n      ]\n    }\n\n    const ftypBuf = Box.encode(this._ftyp)\n    const data = this._tracks.map(track => {\n      const moovBuf = Box.encode(track.moov)\n      return {\n        mime: track.mime,\n        init: Buffer.concat([ftypBuf, moovBuf])\n      }\n    })\n\n    this.emit('ready', data)\n  }\n\n  seek (time) {\n    if (!this._tracks) {\n      throw new Error('Not ready yet; wait for \\'ready\\' event')\n    }\n\n    if (this._fileStream) {\n      this._fileStream.destroy()\n      this._fileStream = null\n    }\n\n    let startOffset = -1\n    this._tracks.map((track, i) => {\n      // find the keyframe before the time\n      // stream from there\n      if (track.outStream) {\n        track.outStream.destroy()\n      }\n      if (track.inStream) {\n        track.inStream.destroy()\n        track.inStream = null\n      }\n      const outStream = track.outStream = mp4.encode()\n      const fragment = this._generateFragment(i, time)\n      if (!fragment) {\n        return outStream.finalize()\n      }\n\n      if (startOffset === -1 || fragment.ranges[0].start < startOffset) {\n        startOffset = fragment.ranges[0].start\n      }\n\n      const writeFragment = (frag) => {\n        if (outStream.destroyed) return\n        outStream.box(frag.moof, err => {\n          if (err) return this.emit('error', err)\n          if (outStream.destroyed) return\n          const slicedStream = track.inStream.slice(frag.ranges)\n          slicedStream.pipe(outStream.mediaData(frag.length, err => {\n            if (err) return this.emit('error', err)\n            if (outStream.destroyed) return\n            const nextFrag = this._generateFragment(i)\n            if (!nextFrag) {\n              return outStream.finalize()\n            }\n            writeFragment(nextFrag)\n          }))\n        })\n      }\n      writeFragment(fragment)\n    })\n\n    if (startOffset >= 0) {\n      const fileStream = this._fileStream = this._file.createReadStream({\n        start: startOffset\n      })\n\n      this._tracks.forEach(track => {\n        track.inStream = new RangeSliceStream(startOffset, {\n          // Allow up to a 10MB offset between audio and video,\n          // which should be fine for any reasonable interleaving\n          // interval and bitrate\n          highWaterMark: 10000000\n        })\n        fileStream.pipe(track.inStream)\n      })\n    }\n\n    return this._tracks.map(track => {\n      return track.outStream\n    })\n  }\n\n  _findSampleBefore (trackInd, time) {\n    const track = this._tracks[trackInd]\n    const scaledTime = Math.floor(track.timeScale * time)\n    let sample = bs(track.samples, scaledTime, (sample, t) => {\n      const pts = sample.dts + sample.presentationOffset// - track.editShift\n      return pts - t\n    })\n    if (sample === -1) {\n      sample = 0\n    } else if (sample < 0) {\n      sample = -sample - 2\n    }\n    // sample is now the last sample with dts <= time\n    // Find the preceeding sync sample\n    while (!track.samples[sample].sync) {\n      sample--\n    }\n    return sample\n  }\n\n  _generateFragment (track, time) {\n    /*\n        1. Find correct sample\n        2. Process backward until sync sample found\n        3. Process forward until next sync sample after MIN_FRAGMENT_DURATION found\n        */\n    const currTrack = this._tracks[track]\n    let firstSample\n    if (time !== undefined) {\n      firstSample = this._findSampleBefore(track, time)\n    } else {\n      firstSample = currTrack.currSample\n    }\n\n    if (firstSample >= currTrack.samples.length) { return null }\n\n    const startDts = currTrack.samples[firstSample].dts\n\n    let totalLen = 0\n    const ranges = []\n    for (var currSample = firstSample; currSample < currTrack.samples.length; currSample++) {\n      const sample = currTrack.samples[currSample]\n      if (sample.sync && sample.dts - startDts >= currTrack.timeScale * MIN_FRAGMENT_DURATION) {\n        break // This is a reasonable place to end the fragment\n      }\n\n      totalLen += sample.size\n      const currRange = ranges.length - 1\n      if (currRange < 0 || ranges[currRange].end !== sample.offset) {\n        // Push a new range\n        ranges.push({\n          start: sample.offset,\n          end: sample.offset + sample.size\n        })\n      } else {\n        ranges[currRange].end += sample.size\n      }\n    }\n\n    currTrack.currSample = currSample\n\n    return {\n      moof: this._generateMoof(track, firstSample, currSample),\n      ranges,\n      length: totalLen\n    }\n  }\n\n  _generateMoof (track, firstSample, lastSample) {\n    const currTrack = this._tracks[track]\n\n    const entries = []\n    let trunVersion = 0\n    for (let j = firstSample; j < lastSample; j++) {\n      const currSample = currTrack.samples[j]\n      if (currSample.presentationOffset < 0) { trunVersion = 1 }\n      entries.push({\n        sampleDuration: currSample.duration,\n        sampleSize: currSample.size,\n        sampleFlags: currSample.sync ? 0x2000000 : 0x1010000,\n        sampleCompositionTimeOffset: currSample.presentationOffset\n      })\n    }\n\n    const moof = {\n      type: 'moof',\n      mfhd: {\n        sequenceNumber: currTrack.fragmentSequence++\n      },\n      trafs: [{\n        tfhd: {\n          flags: 0x20000, // default-base-is-moof\n          trackId: currTrack.trackId\n        },\n        tfdt: {\n          baseMediaDecodeTime: currTrack.samples[firstSample].dts\n        },\n        trun: {\n          flags: 0xf01,\n          dataOffset: 8, // The moof size has to be added to this later as well\n          entries,\n          version: trunVersion\n        }\n      }]\n    }\n\n    // Update the offset\n    moof.trafs[0].trun.dataOffset += Box.encodingLength(moof)\n\n    return moof\n  }\n}\n\nclass RunLengthIndex {\n  constructor (entries, countName) {\n    this._entries = entries\n    this._countName = countName || 'count'\n    this._index = 0\n    this._offset = 0\n\n    this.value = this._entries[0]\n  }\n\n  inc () {\n    this._offset++\n    if (this._offset >= this._entries[this._index][this._countName]) {\n      this._index++\n      this._offset = 0\n    }\n\n    this.value = this._entries[this._index]\n  }\n}\n\nfunction empty () {\n  return {\n    version: 0,\n    flags: 0,\n    entries: []\n  }\n}\n\nconst MIN_FRAGMENT_DURATION = 1 // second\n\nmodule.exports = MP4Remuxer\n"},"lineCount":478}},"error":null,"hash":"542ec414629b4b96c018ff1d312118c8","cacheData":{"env":{}}}