{"id":"node_modules/simple-sha1/rusha-worker-sha1.js","dependencies":[{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\package.json","includedInParent":true,"mtime":1596143871560},{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\simple-sha1\\package.json","includedInParent":true,"mtime":1596059323063},{"name":"rusha","loc":{"line":1,"column":20},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\simple-sha1\\rusha-worker-sha1.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\rusha\\dist\\rusha.js"}],"generated":{"js":"var Rusha = require('rusha')\n\nvar worker\nvar nextTaskId\nvar cbs\n\nfunction init () {\n  worker = Rusha.createWorker()\n  nextTaskId = 1\n  cbs = {} // taskId -> cb\n\n  worker.onmessage = function onRushaMessage (e) {\n    var taskId = e.data.id\n    var cb = cbs[taskId]\n    delete cbs[taskId]\n\n    if (e.data.error != null) {\n      cb(new Error('Rusha worker error: ' + e.data.error))\n    } else {\n      cb(null, e.data.hash)\n    }\n  }\n}\n\nfunction sha1 (buf, cb) {\n  if (!worker) init()\n\n  cbs[nextTaskId] = cb\n  worker.postMessage({ id: nextTaskId, data: buf })\n  nextTaskId += 1\n}\n\nmodule.exports = sha1\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/simple-sha1/rusha-worker-sha1.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/simple-sha1/rusha-worker-sha1.js":"var Rusha = require('rusha')\n\nvar worker\nvar nextTaskId\nvar cbs\n\nfunction init () {\n  worker = Rusha.createWorker()\n  nextTaskId = 1\n  cbs = {} // taskId -> cb\n\n  worker.onmessage = function onRushaMessage (e) {\n    var taskId = e.data.id\n    var cb = cbs[taskId]\n    delete cbs[taskId]\n\n    if (e.data.error != null) {\n      cb(new Error('Rusha worker error: ' + e.data.error))\n    } else {\n      cb(null, e.data.hash)\n    }\n  }\n}\n\nfunction sha1 (buf, cb) {\n  if (!worker) init()\n\n  cbs[nextTaskId] = cb\n  worker.postMessage({ id: nextTaskId, data: buf })\n  nextTaskId += 1\n}\n\nmodule.exports = sha1\n"},"lineCount":34}},"error":null,"hash":"110ae24566aa81f187f47b519a1f8b9c","cacheData":{"env":{}}}