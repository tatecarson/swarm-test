{"id":"node_modules/memory-chunk-store/index.js","dependencies":[{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\package.json","includedInParent":true,"mtime":1596059326965},{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\memory-chunk-store\\package.json","includedInParent":true,"mtime":1596059322592},{"name":"process","parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\memory-chunk-store\\index.js","resolved":"C:\\Users\\Tate\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nmodule.exports = Storage\n\nfunction Storage (chunkLength, opts) {\n  if (!(this instanceof Storage)) return new Storage(chunkLength, opts)\n  if (!opts) opts = {}\n\n  this.chunkLength = Number(chunkLength)\n  if (!this.chunkLength) throw new Error('First argument must be a chunk length')\n\n  this.chunks = []\n  this.closed = false\n  this.length = Number(opts.length) || Infinity\n\n  if (this.length !== Infinity) {\n    this.lastChunkLength = (this.length % this.chunkLength) || this.chunkLength\n    this.lastChunkIndex = Math.ceil(this.length / this.chunkLength) - 1\n  }\n}\n\nStorage.prototype.put = function (index, buf, cb) {\n  if (this.closed) return nextTick(cb, new Error('Storage is closed'))\n\n  var isLastChunk = (index === this.lastChunkIndex)\n  if (isLastChunk && buf.length !== this.lastChunkLength) {\n    return nextTick(cb, new Error('Last chunk length must be ' + this.lastChunkLength))\n  }\n  if (!isLastChunk && buf.length !== this.chunkLength) {\n    return nextTick(cb, new Error('Chunk length must be ' + this.chunkLength))\n  }\n  this.chunks[index] = buf\n  nextTick(cb, null)\n}\n\nStorage.prototype.get = function (index, opts, cb) {\n  if (typeof opts === 'function') return this.get(index, null, opts)\n  if (this.closed) return nextTick(cb, new Error('Storage is closed'))\n  var buf = this.chunks[index]\n  if (!buf) {\n    var err = new Error('Chunk not found')\n    err.notFound = true\n    return nextTick(cb, err)\n  }\n  if (!opts) return nextTick(cb, null, buf)\n  var offset = opts.offset || 0\n  var len = opts.length || (buf.length - offset)\n  nextTick(cb, null, buf.slice(offset, len + offset))\n}\n\nStorage.prototype.close = Storage.prototype.destroy = function (cb) {\n  if (this.closed) return nextTick(cb, new Error('Storage is closed'))\n  this.closed = true\n  this.chunks = null\n  nextTick(cb, null)\n}\n\nfunction nextTick (cb, err, val) {\n  process.nextTick(function () {\n    if (cb) cb(err, val)\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/memory-chunk-store/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/memory-chunk-store/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}}],"sources":{"node_modules/memory-chunk-store/index.js":"module.exports = Storage\n\nfunction Storage (chunkLength, opts) {\n  if (!(this instanceof Storage)) return new Storage(chunkLength, opts)\n  if (!opts) opts = {}\n\n  this.chunkLength = Number(chunkLength)\n  if (!this.chunkLength) throw new Error('First argument must be a chunk length')\n\n  this.chunks = []\n  this.closed = false\n  this.length = Number(opts.length) || Infinity\n\n  if (this.length !== Infinity) {\n    this.lastChunkLength = (this.length % this.chunkLength) || this.chunkLength\n    this.lastChunkIndex = Math.ceil(this.length / this.chunkLength) - 1\n  }\n}\n\nStorage.prototype.put = function (index, buf, cb) {\n  if (this.closed) return nextTick(cb, new Error('Storage is closed'))\n\n  var isLastChunk = (index === this.lastChunkIndex)\n  if (isLastChunk && buf.length !== this.lastChunkLength) {\n    return nextTick(cb, new Error('Last chunk length must be ' + this.lastChunkLength))\n  }\n  if (!isLastChunk && buf.length !== this.chunkLength) {\n    return nextTick(cb, new Error('Chunk length must be ' + this.chunkLength))\n  }\n  this.chunks[index] = buf\n  nextTick(cb, null)\n}\n\nStorage.prototype.get = function (index, opts, cb) {\n  if (typeof opts === 'function') return this.get(index, null, opts)\n  if (this.closed) return nextTick(cb, new Error('Storage is closed'))\n  var buf = this.chunks[index]\n  if (!buf) {\n    var err = new Error('Chunk not found')\n    err.notFound = true\n    return nextTick(cb, err)\n  }\n  if (!opts) return nextTick(cb, null, buf)\n  var offset = opts.offset || 0\n  var len = opts.length || (buf.length - offset)\n  nextTick(cb, null, buf.slice(offset, len + offset))\n}\n\nStorage.prototype.close = Storage.prototype.destroy = function (cb) {\n  if (this.closed) return nextTick(cb, new Error('Storage is closed'))\n  this.closed = true\n  this.chunks = null\n  nextTick(cb, null)\n}\n\nfunction nextTick (cb, err, val) {\n  process.nextTick(function () {\n    if (cb) cb(err, val)\n  })\n}\n"},"lineCount":62}},"error":null,"hash":"4583952db61af499e6a8c0ccad1ffd4c","cacheData":{"env":{}}}