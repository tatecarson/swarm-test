{"id":"node_modules/bittorrent-protocol/index.js","dependencies":[{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\package.json","includedInParent":true,"mtime":1596143871560},{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\package.json","includedInParent":true,"mtime":1596059322597},{"name":"unordered-array-remove","loc":{"line":1,"column":28},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\unordered-array-remove\\index.js"},{"name":"bencode","loc":{"line":2,"column":24},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bencode\\lib\\index.js"},{"name":"bitfield","loc":{"line":3,"column":25},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bitfield\\index.js"},{"name":"debug","loc":{"line":4,"column":22},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\debug\\src\\browser.js"},{"name":"randombytes","loc":{"line":5,"column":28},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\randombytes\\browser.js"},{"name":"speedometer","loc":{"line":6,"column":28},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\speedometer\\index.js"},{"name":"readable-stream","loc":{"line":7,"column":23},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\readable-stream\\readable-browser.js"},{"name":"buffer","parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\bittorrent-protocol\\index.js","resolved":"C:\\Users\\Tate\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst arrayRemove = require('unordered-array-remove')\nconst bencode = require('bencode')\nconst BitField = require('bitfield')\nconst debug = require('debug')('bittorrent-protocol')\nconst randombytes = require('randombytes')\nconst speedometer = require('speedometer')\nconst stream = require('readable-stream')\n\nconst BITFIELD_GROW = 400000\nconst KEEP_ALIVE_TIMEOUT = 55000\n\nconst MESSAGE_PROTOCOL = Buffer.from('\\u0013BitTorrent protocol')\nconst MESSAGE_KEEP_ALIVE = Buffer.from([0x00, 0x00, 0x00, 0x00])\nconst MESSAGE_CHOKE = Buffer.from([0x00, 0x00, 0x00, 0x01, 0x00])\nconst MESSAGE_UNCHOKE = Buffer.from([0x00, 0x00, 0x00, 0x01, 0x01])\nconst MESSAGE_INTERESTED = Buffer.from([0x00, 0x00, 0x00, 0x01, 0x02])\nconst MESSAGE_UNINTERESTED = Buffer.from([0x00, 0x00, 0x00, 0x01, 0x03])\n\nconst MESSAGE_RESERVED = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\nconst MESSAGE_PORT = [0x00, 0x00, 0x00, 0x03, 0x09, 0x00, 0x00]\n\nclass Request {\n  constructor (piece, offset, length, callback) {\n    this.piece = piece\n    this.offset = offset\n    this.length = length\n    this.callback = callback\n  }\n}\n\nclass Wire extends stream.Duplex {\n  constructor () {\n    super()\n\n    this._debugId = randombytes(4).toString('hex')\n    this._debug('new wire')\n\n    this.peerId = null // remote peer id (hex string)\n    this.peerIdBuffer = null // remote peer id (buffer)\n    this.type = null // connection type ('webrtc', 'tcpIncoming', 'tcpOutgoing', 'webSeed')\n\n    this.amChoking = true // are we choking the peer?\n    this.amInterested = false // are we interested in the peer?\n\n    this.peerChoking = true // is the peer choking us?\n    this.peerInterested = false // is the peer interested in us?\n\n    // The largest torrent that I know of (the Geocities archive) is ~641 GB and has\n    // ~41,000 pieces. Therefore, cap bitfield to 10x larger (400,000 bits) to support all\n    // possible torrents but prevent malicious peers from growing bitfield to fill memory.\n    this.peerPieces = new BitField(0, { grow: BITFIELD_GROW })\n\n    this.peerExtensions = {}\n\n    this.requests = [] // outgoing\n    this.peerRequests = [] // incoming\n\n    this.extendedMapping = {} // number -> string, ex: 1 -> 'ut_metadata'\n    this.peerExtendedMapping = {} // string -> number, ex: 9 -> 'ut_metadata'\n\n    // The extended handshake to send, minus the \"m\" field, which gets automatically\n    // filled from `this.extendedMapping`\n    this.extendedHandshake = {}\n\n    this.peerExtendedHandshake = {} // remote peer's extended handshake\n\n    this._ext = {} // string -> function, ex 'ut_metadata' -> ut_metadata()\n    this._nextExt = 1\n\n    this.uploaded = 0\n    this.downloaded = 0\n    this.uploadSpeed = speedometer()\n    this.downloadSpeed = speedometer()\n\n    this._keepAliveInterval = null\n    this._timeout = null\n    this._timeoutMs = 0\n\n    this.destroyed = false // was the wire ended by calling `destroy`?\n    this._finished = false\n\n    this._parserSize = 0 // number of needed bytes to parse next message from remote peer\n    this._parser = null // function to call once `this._parserSize` bytes are available\n\n    this._buffer = [] // incomplete message data\n    this._bufferSize = 0 // cached total length of buffers in `this._buffer`\n\n    this.once('finish', () => this._onFinish())\n\n    this._parseHandshake()\n  }\n\n  /**\n   * Set whether to send a \"keep-alive\" ping (sent every 55s)\n   * @param {boolean} enable\n   */\n  setKeepAlive (enable) {\n    this._debug('setKeepAlive %s', enable)\n    clearInterval(this._keepAliveInterval)\n    if (enable === false) return\n    this._keepAliveInterval = setInterval(() => {\n      this.keepAlive()\n    }, KEEP_ALIVE_TIMEOUT)\n  }\n\n  /**\n   * Set the amount of time to wait before considering a request to be \"timed out\"\n   * @param {number} ms\n   * @param {boolean=} unref (should the timer be unref'd? default: false)\n   */\n  setTimeout (ms, unref) {\n    this._debug('setTimeout ms=%d unref=%s', ms, unref)\n    this._clearTimeout()\n    this._timeoutMs = ms\n    this._timeoutUnref = !!unref\n    this._updateTimeout()\n  }\n\n  destroy () {\n    if (this.destroyed) return\n    this.destroyed = true\n    this._debug('destroy')\n    this.emit('close')\n    this.end()\n  }\n\n  end (...args) {\n    this._debug('end')\n    this._onUninterested()\n    this._onChoke()\n    super.end(...args)\n  }\n\n  /**\n   * Use the specified protocol extension.\n   * @param  {function} Extension\n   */\n  use (Extension) {\n    const name = Extension.prototype.name\n    if (!name) {\n      throw new Error('Extension class requires a \"name\" property on the prototype')\n    }\n    this._debug('use extension.name=%s', name)\n\n    const ext = this._nextExt\n    const handler = new Extension(this)\n\n    function noop () {}\n\n    if (typeof handler.onHandshake !== 'function') {\n      handler.onHandshake = noop\n    }\n    if (typeof handler.onExtendedHandshake !== 'function') {\n      handler.onExtendedHandshake = noop\n    }\n    if (typeof handler.onMessage !== 'function') {\n      handler.onMessage = noop\n    }\n\n    this.extendedMapping[ext] = name\n    this._ext[name] = handler\n    this[name] = handler\n\n    this._nextExt += 1\n  }\n\n  //\n  // OUTGOING MESSAGES\n  //\n\n  /**\n   * Message \"keep-alive\": <len=0000>\n   */\n  keepAlive () {\n    this._debug('keep-alive')\n    this._push(MESSAGE_KEEP_ALIVE)\n  }\n\n  /**\n   * Message: \"handshake\" <pstrlen><pstr><reserved><info_hash><peer_id>\n   * @param  {Buffer|string} infoHash (as Buffer or *hex* string)\n   * @param  {Buffer|string} peerId\n   * @param  {Object} extensions\n   */\n  handshake (infoHash, peerId, extensions) {\n    let infoHashBuffer\n    let peerIdBuffer\n    if (typeof infoHash === 'string') {\n      infoHash = infoHash.toLowerCase()\n      infoHashBuffer = Buffer.from(infoHash, 'hex')\n    } else {\n      infoHashBuffer = infoHash\n      infoHash = infoHashBuffer.toString('hex')\n    }\n    if (typeof peerId === 'string') {\n      peerIdBuffer = Buffer.from(peerId, 'hex')\n    } else {\n      peerIdBuffer = peerId\n      peerId = peerIdBuffer.toString('hex')\n    }\n\n    if (infoHashBuffer.length !== 20 || peerIdBuffer.length !== 20) {\n      throw new Error('infoHash and peerId MUST have length 20')\n    }\n\n    this._debug('handshake i=%s p=%s exts=%o', infoHash, peerId, extensions)\n\n    const reserved = Buffer.from(MESSAGE_RESERVED)\n\n    // enable extended message\n    reserved[5] |= 0x10\n\n    if (extensions && extensions.dht) reserved[7] |= 1\n\n    this._push(Buffer.concat([MESSAGE_PROTOCOL, reserved, infoHashBuffer, peerIdBuffer]))\n    this._handshakeSent = true\n\n    if (this.peerExtensions.extended && !this._extendedHandshakeSent) {\n      // Peer's handshake indicated support already\n      // (incoming connection)\n      this._sendExtendedHandshake()\n    }\n  }\n\n  /* Peer supports BEP-0010, send extended handshake.\n   *\n   * This comes after the 'handshake' event to give the user a chance to populate\n   * `this.extendedHandshake` and `this.extendedMapping` before the extended handshake\n   * is sent to the remote peer.\n   */\n  _sendExtendedHandshake () {\n    // Create extended message object from registered extensions\n    const msg = Object.assign({}, this.extendedHandshake)\n    msg.m = {}\n    for (const ext in this.extendedMapping) {\n      const name = this.extendedMapping[ext]\n      msg.m[name] = Number(ext)\n    }\n\n    // Send extended handshake\n    this.extended(0, bencode.encode(msg))\n    this._extendedHandshakeSent = true\n  }\n\n  /**\n   * Message \"choke\": <len=0001><id=0>\n   */\n  choke () {\n    if (this.amChoking) return\n    this.amChoking = true\n    this._debug('choke')\n    while (this.peerRequests.length) {\n      this.peerRequests.pop()\n    }\n    this._push(MESSAGE_CHOKE)\n  }\n\n  /**\n   * Message \"unchoke\": <len=0001><id=1>\n   */\n  unchoke () {\n    if (!this.amChoking) return\n    this.amChoking = false\n    this._debug('unchoke')\n    this._push(MESSAGE_UNCHOKE)\n  }\n\n  /**\n   * Message \"interested\": <len=0001><id=2>\n   */\n  interested () {\n    if (this.amInterested) return\n    this.amInterested = true\n    this._debug('interested')\n    this._push(MESSAGE_INTERESTED)\n  }\n\n  /**\n   * Message \"uninterested\": <len=0001><id=3>\n   */\n  uninterested () {\n    if (!this.amInterested) return\n    this.amInterested = false\n    this._debug('uninterested')\n    this._push(MESSAGE_UNINTERESTED)\n  }\n\n  /**\n   * Message \"have\": <len=0005><id=4><piece index>\n   * @param  {number} index\n   */\n  have (index) {\n    this._debug('have %d', index)\n    this._message(4, [index], null)\n  }\n\n  /**\n   * Message \"bitfield\": <len=0001+X><id=5><bitfield>\n   * @param  {BitField|Buffer} bitfield\n   */\n  bitfield (bitfield) {\n    this._debug('bitfield')\n    if (!Buffer.isBuffer(bitfield)) bitfield = bitfield.buffer\n    this._message(5, [], bitfield)\n  }\n\n  /**\n   * Message \"request\": <len=0013><id=6><index><begin><length>\n   * @param  {number}   index\n   * @param  {number}   offset\n   * @param  {number}   length\n   * @param  {function} cb\n   */\n  request (index, offset, length, cb) {\n    if (!cb) cb = () => {}\n    if (this._finished) return cb(new Error('wire is closed'))\n    if (this.peerChoking) return cb(new Error('peer is choking'))\n\n    this._debug('request index=%d offset=%d length=%d', index, offset, length)\n\n    this.requests.push(new Request(index, offset, length, cb))\n    this._updateTimeout()\n    this._message(6, [index, offset, length], null)\n  }\n\n  /**\n   * Message \"piece\": <len=0009+X><id=7><index><begin><block>\n   * @param  {number} index\n   * @param  {number} offset\n   * @param  {Buffer} buffer\n   */\n  piece (index, offset, buffer) {\n    this._debug('piece index=%d offset=%d', index, offset)\n    this.uploaded += buffer.length\n    this.uploadSpeed(buffer.length)\n    this.emit('upload', buffer.length)\n    this._message(7, [index, offset], buffer)\n  }\n\n  /**\n   * Message \"cancel\": <len=0013><id=8><index><begin><length>\n   * @param  {number} index\n   * @param  {number} offset\n   * @param  {number} length\n   */\n  cancel (index, offset, length) {\n    this._debug('cancel index=%d offset=%d length=%d', index, offset, length)\n    this._callback(\n      this._pull(this.requests, index, offset, length),\n      new Error('request was cancelled'),\n      null\n    )\n    this._message(8, [index, offset, length], null)\n  }\n\n  /**\n   * Message: \"port\" <len=0003><id=9><listen-port>\n   * @param {Number} port\n   */\n  port (port) {\n    this._debug('port %d', port)\n    const message = Buffer.from(MESSAGE_PORT)\n    message.writeUInt16BE(port, 5)\n    this._push(message)\n  }\n\n  /**\n   * Message: \"extended\" <len=0005+X><id=20><ext-number><payload>\n   * @param  {number|string} ext\n   * @param  {Object} obj\n   */\n  extended (ext, obj) {\n    this._debug('extended ext=%s', ext)\n    if (typeof ext === 'string' && this.peerExtendedMapping[ext]) {\n      ext = this.peerExtendedMapping[ext]\n    }\n    if (typeof ext === 'number') {\n      const extId = Buffer.from([ext])\n      const buf = Buffer.isBuffer(obj) ? obj : bencode.encode(obj)\n\n      this._message(20, [], Buffer.concat([extId, buf]))\n    } else {\n      throw new Error(`Unrecognized extension: ${ext}`)\n    }\n  }\n\n  /**\n   * Duplex stream method. Called whenever the remote peer stream wants data. No-op\n   * since we'll just push data whenever we get it.\n   */\n  _read () {}\n\n  /**\n   * Send a message to the remote peer.\n   */\n  _message (id, numbers, data) {\n    const dataLength = data ? data.length : 0\n    const buffer = Buffer.allocUnsafe(5 + (4 * numbers.length))\n\n    buffer.writeUInt32BE(buffer.length + dataLength - 4, 0)\n    buffer[4] = id\n    for (let i = 0; i < numbers.length; i++) {\n      buffer.writeUInt32BE(numbers[i], 5 + (4 * i))\n    }\n\n    this._push(buffer)\n    if (data) this._push(data)\n  }\n\n  _push (data) {\n    if (this._finished) return\n    return this.push(data)\n  }\n\n  //\n  // INCOMING MESSAGES\n  //\n\n  _onKeepAlive () {\n    this._debug('got keep-alive')\n    this.emit('keep-alive')\n  }\n\n  _onHandshake (infoHashBuffer, peerIdBuffer, extensions) {\n    const infoHash = infoHashBuffer.toString('hex')\n    const peerId = peerIdBuffer.toString('hex')\n\n    this._debug('got handshake i=%s p=%s exts=%o', infoHash, peerId, extensions)\n\n    this.peerId = peerId\n    this.peerIdBuffer = peerIdBuffer\n    this.peerExtensions = extensions\n\n    this.emit('handshake', infoHash, peerId, extensions)\n\n    let name\n    for (name in this._ext) {\n      this._ext[name].onHandshake(infoHash, peerId, extensions)\n    }\n\n    if (extensions.extended && this._handshakeSent &&\n        !this._extendedHandshakeSent) {\n      // outgoing connection\n      this._sendExtendedHandshake()\n    }\n  }\n\n  _onChoke () {\n    this.peerChoking = true\n    this._debug('got choke')\n    this.emit('choke')\n    while (this.requests.length) {\n      this._callback(this.requests.pop(), new Error('peer is choking'), null)\n    }\n  }\n\n  _onUnchoke () {\n    this.peerChoking = false\n    this._debug('got unchoke')\n    this.emit('unchoke')\n  }\n\n  _onInterested () {\n    this.peerInterested = true\n    this._debug('got interested')\n    this.emit('interested')\n  }\n\n  _onUninterested () {\n    this.peerInterested = false\n    this._debug('got uninterested')\n    this.emit('uninterested')\n  }\n\n  _onHave (index) {\n    if (this.peerPieces.get(index)) return\n    this._debug('got have %d', index)\n\n    this.peerPieces.set(index, true)\n    this.emit('have', index)\n  }\n\n  _onBitField (buffer) {\n    this.peerPieces = new BitField(buffer)\n    this._debug('got bitfield')\n    this.emit('bitfield', this.peerPieces)\n  }\n\n  _onRequest (index, offset, length) {\n    if (this.amChoking) return\n    this._debug('got request index=%d offset=%d length=%d', index, offset, length)\n\n    const respond = (err, buffer) => {\n      if (request !== this._pull(this.peerRequests, index, offset, length)) return\n      if (err) return this._debug('error satisfying request index=%d offset=%d length=%d (%s)', index, offset, length, err.message)\n      this.piece(index, offset, buffer)\n    }\n\n    var request = new Request(index, offset, length, respond)\n    this.peerRequests.push(request)\n    this.emit('request', index, offset, length, respond)\n  }\n\n  _onPiece (index, offset, buffer) {\n    this._debug('got piece index=%d offset=%d', index, offset)\n    this._callback(this._pull(this.requests, index, offset, buffer.length), null, buffer)\n    this.downloaded += buffer.length\n    this.downloadSpeed(buffer.length)\n    this.emit('download', buffer.length)\n    this.emit('piece', index, offset, buffer)\n  }\n\n  _onCancel (index, offset, length) {\n    this._debug('got cancel index=%d offset=%d length=%d', index, offset, length)\n    this._pull(this.peerRequests, index, offset, length)\n    this.emit('cancel', index, offset, length)\n  }\n\n  _onPort (port) {\n    this._debug('got port %d', port)\n    this.emit('port', port)\n  }\n\n  _onExtended (ext, buf) {\n    if (ext === 0) {\n      let info\n      try {\n        info = bencode.decode(buf)\n      } catch (err) {\n        this._debug('ignoring invalid extended handshake: %s', err.message || err)\n      }\n\n      if (!info) return\n      this.peerExtendedHandshake = info\n\n      let name\n      if (typeof info.m === 'object') {\n        for (name in info.m) {\n          this.peerExtendedMapping[name] = Number(info.m[name].toString())\n        }\n      }\n      for (name in this._ext) {\n        if (this.peerExtendedMapping[name]) {\n          this._ext[name].onExtendedHandshake(this.peerExtendedHandshake)\n        }\n      }\n      this._debug('got extended handshake')\n      this.emit('extended', 'handshake', this.peerExtendedHandshake)\n    } else {\n      if (this.extendedMapping[ext]) {\n        ext = this.extendedMapping[ext] // friendly name for extension\n        if (this._ext[ext]) {\n          // there is an registered extension handler, so call it\n          this._ext[ext].onMessage(buf)\n        }\n      }\n      this._debug('got extended message ext=%s', ext)\n      this.emit('extended', ext, buf)\n    }\n  }\n\n  _onTimeout () {\n    this._debug('request timed out')\n    this._callback(this.requests.shift(), new Error('request has timed out'), null)\n    this.emit('timeout')\n  }\n\n  /**\n   * Duplex stream method. Called whenever the remote peer has data for us. Data that the\n   * remote peer sends gets buffered (i.e. not actually processed) until the right number\n   * of bytes have arrived, determined by the last call to `this._parse(number, callback)`.\n   * Once enough bytes have arrived to process the message, the callback function\n   * (i.e. `this._parser`) gets called with the full buffer of data.\n   * @param  {Buffer} data\n   * @param  {string} encoding\n   * @param  {function} cb\n   */\n  _write (data, encoding, cb) {\n    this._bufferSize += data.length\n    this._buffer.push(data)\n\n    while (this._bufferSize >= this._parserSize) {\n      const buffer = (this._buffer.length === 1)\n        ? this._buffer[0]\n        : Buffer.concat(this._buffer)\n      this._bufferSize -= this._parserSize\n      this._buffer = this._bufferSize\n        ? [buffer.slice(this._parserSize)]\n        : []\n      this._parser(buffer.slice(0, this._parserSize))\n    }\n\n    cb(null) // Signal that we're ready for more data\n  }\n\n  _callback (request, err, buffer) {\n    if (!request) return\n\n    this._clearTimeout()\n\n    if (!this.peerChoking && !this._finished) this._updateTimeout()\n    request.callback(err, buffer)\n  }\n\n  _clearTimeout () {\n    if (!this._timeout) return\n\n    clearTimeout(this._timeout)\n    this._timeout = null\n  }\n\n  _updateTimeout () {\n    if (!this._timeoutMs || !this.requests.length || this._timeout) return\n\n    this._timeout = setTimeout(() => this._onTimeout(), this._timeoutMs)\n    if (this._timeoutUnref && this._timeout.unref) this._timeout.unref()\n  }\n\n  /**\n   * Takes a number of bytes that the local peer is waiting to receive from the remote peer\n   * in order to parse a complete message, and a callback function to be called once enough\n   * bytes have arrived.\n   * @param  {number} size\n   * @param  {function} parser\n   */\n  _parse (size, parser) {\n    this._parserSize = size\n    this._parser = parser\n  }\n\n  /**\n   * Handle the first 4 bytes of a message, to determine the length of bytes that must be\n   * waited for in order to have the whole message.\n   * @param  {Buffer} buffer\n   */\n  _onMessageLength (buffer) {\n    const length = buffer.readUInt32BE(0)\n    if (length > 0) {\n      this._parse(length, this._onMessage)\n    } else {\n      this._onKeepAlive()\n      this._parse(4, this._onMessageLength)\n    }\n  }\n\n  /**\n   * Handle a message from the remote peer.\n   * @param  {Buffer} buffer\n   */\n  _onMessage (buffer) {\n    this._parse(4, this._onMessageLength)\n    switch (buffer[0]) {\n      case 0:\n        return this._onChoke()\n      case 1:\n        return this._onUnchoke()\n      case 2:\n        return this._onInterested()\n      case 3:\n        return this._onUninterested()\n      case 4:\n        return this._onHave(buffer.readUInt32BE(1))\n      case 5:\n        return this._onBitField(buffer.slice(1))\n      case 6:\n        return this._onRequest(\n          buffer.readUInt32BE(1),\n          buffer.readUInt32BE(5),\n          buffer.readUInt32BE(9)\n        )\n      case 7:\n        return this._onPiece(\n          buffer.readUInt32BE(1),\n          buffer.readUInt32BE(5),\n          buffer.slice(9)\n        )\n      case 8:\n        return this._onCancel(\n          buffer.readUInt32BE(1),\n          buffer.readUInt32BE(5),\n          buffer.readUInt32BE(9)\n        )\n      case 9:\n        return this._onPort(buffer.readUInt16BE(1))\n      case 20:\n        return this._onExtended(buffer.readUInt8(1), buffer.slice(2))\n      default:\n        this._debug('got unknown message')\n        return this.emit('unknownmessage', buffer)\n    }\n  }\n\n  _parseHandshake () {\n    this._parse(1, buffer => {\n      const pstrlen = buffer.readUInt8(0)\n      this._parse(pstrlen + 48, handshake => {\n        const protocol = handshake.slice(0, pstrlen)\n        if (protocol.toString() !== 'BitTorrent protocol') {\n          this._debug('Error: wire not speaking BitTorrent protocol (%s)', protocol.toString())\n          this.end()\n          return\n        }\n        handshake = handshake.slice(pstrlen)\n        this._onHandshake(handshake.slice(8, 28), handshake.slice(28, 48), {\n          dht: !!(handshake[7] & 0x01), // see bep_0005\n          extended: !!(handshake[5] & 0x10) // see bep_0010\n        })\n        this._parse(4, this._onMessageLength)\n      })\n    })\n  }\n\n  _onFinish () {\n    this._finished = true\n\n    this.push(null) // stream cannot be half open, so signal the end of it\n    while (this.read()) {} // consume and discard the rest of the stream data\n\n    clearInterval(this._keepAliveInterval)\n    this._parse(Number.MAX_VALUE, () => {})\n    while (this.peerRequests.length) {\n      this.peerRequests.pop()\n    }\n    while (this.requests.length) {\n      this._callback(this.requests.pop(), new Error('wire was closed'), null)\n    }\n  }\n\n  _debug (...args) {\n    args[0] = `[${this._debugId}] ${args[0]}`\n    debug(...args)\n  }\n\n  _pull (requests, piece, offset, length) {\n    for (let i = 0; i < requests.length; i++) {\n      const req = requests[i]\n      if (req.piece === piece && req.offset === offset && req.length === length) {\n        arrayRemove(requests, i)\n        return req\n      }\n    }\n    return null\n  }\n}\n\nmodule.exports = Wire\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/bittorrent-protocol/index.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}}],"sources":{"node_modules/bittorrent-protocol/index.js":"const arrayRemove = require('unordered-array-remove')\nconst bencode = require('bencode')\nconst BitField = require('bitfield')\nconst debug = require('debug')('bittorrent-protocol')\nconst randombytes = require('randombytes')\nconst speedometer = require('speedometer')\nconst stream = require('readable-stream')\n\nconst BITFIELD_GROW = 400000\nconst KEEP_ALIVE_TIMEOUT = 55000\n\nconst MESSAGE_PROTOCOL = Buffer.from('\\u0013BitTorrent protocol')\nconst MESSAGE_KEEP_ALIVE = Buffer.from([0x00, 0x00, 0x00, 0x00])\nconst MESSAGE_CHOKE = Buffer.from([0x00, 0x00, 0x00, 0x01, 0x00])\nconst MESSAGE_UNCHOKE = Buffer.from([0x00, 0x00, 0x00, 0x01, 0x01])\nconst MESSAGE_INTERESTED = Buffer.from([0x00, 0x00, 0x00, 0x01, 0x02])\nconst MESSAGE_UNINTERESTED = Buffer.from([0x00, 0x00, 0x00, 0x01, 0x03])\n\nconst MESSAGE_RESERVED = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\nconst MESSAGE_PORT = [0x00, 0x00, 0x00, 0x03, 0x09, 0x00, 0x00]\n\nclass Request {\n  constructor (piece, offset, length, callback) {\n    this.piece = piece\n    this.offset = offset\n    this.length = length\n    this.callback = callback\n  }\n}\n\nclass Wire extends stream.Duplex {\n  constructor () {\n    super()\n\n    this._debugId = randombytes(4).toString('hex')\n    this._debug('new wire')\n\n    this.peerId = null // remote peer id (hex string)\n    this.peerIdBuffer = null // remote peer id (buffer)\n    this.type = null // connection type ('webrtc', 'tcpIncoming', 'tcpOutgoing', 'webSeed')\n\n    this.amChoking = true // are we choking the peer?\n    this.amInterested = false // are we interested in the peer?\n\n    this.peerChoking = true // is the peer choking us?\n    this.peerInterested = false // is the peer interested in us?\n\n    // The largest torrent that I know of (the Geocities archive) is ~641 GB and has\n    // ~41,000 pieces. Therefore, cap bitfield to 10x larger (400,000 bits) to support all\n    // possible torrents but prevent malicious peers from growing bitfield to fill memory.\n    this.peerPieces = new BitField(0, { grow: BITFIELD_GROW })\n\n    this.peerExtensions = {}\n\n    this.requests = [] // outgoing\n    this.peerRequests = [] // incoming\n\n    this.extendedMapping = {} // number -> string, ex: 1 -> 'ut_metadata'\n    this.peerExtendedMapping = {} // string -> number, ex: 9 -> 'ut_metadata'\n\n    // The extended handshake to send, minus the \"m\" field, which gets automatically\n    // filled from `this.extendedMapping`\n    this.extendedHandshake = {}\n\n    this.peerExtendedHandshake = {} // remote peer's extended handshake\n\n    this._ext = {} // string -> function, ex 'ut_metadata' -> ut_metadata()\n    this._nextExt = 1\n\n    this.uploaded = 0\n    this.downloaded = 0\n    this.uploadSpeed = speedometer()\n    this.downloadSpeed = speedometer()\n\n    this._keepAliveInterval = null\n    this._timeout = null\n    this._timeoutMs = 0\n\n    this.destroyed = false // was the wire ended by calling `destroy`?\n    this._finished = false\n\n    this._parserSize = 0 // number of needed bytes to parse next message from remote peer\n    this._parser = null // function to call once `this._parserSize` bytes are available\n\n    this._buffer = [] // incomplete message data\n    this._bufferSize = 0 // cached total length of buffers in `this._buffer`\n\n    this.once('finish', () => this._onFinish())\n\n    this._parseHandshake()\n  }\n\n  /**\n   * Set whether to send a \"keep-alive\" ping (sent every 55s)\n   * @param {boolean} enable\n   */\n  setKeepAlive (enable) {\n    this._debug('setKeepAlive %s', enable)\n    clearInterval(this._keepAliveInterval)\n    if (enable === false) return\n    this._keepAliveInterval = setInterval(() => {\n      this.keepAlive()\n    }, KEEP_ALIVE_TIMEOUT)\n  }\n\n  /**\n   * Set the amount of time to wait before considering a request to be \"timed out\"\n   * @param {number} ms\n   * @param {boolean=} unref (should the timer be unref'd? default: false)\n   */\n  setTimeout (ms, unref) {\n    this._debug('setTimeout ms=%d unref=%s', ms, unref)\n    this._clearTimeout()\n    this._timeoutMs = ms\n    this._timeoutUnref = !!unref\n    this._updateTimeout()\n  }\n\n  destroy () {\n    if (this.destroyed) return\n    this.destroyed = true\n    this._debug('destroy')\n    this.emit('close')\n    this.end()\n  }\n\n  end (...args) {\n    this._debug('end')\n    this._onUninterested()\n    this._onChoke()\n    super.end(...args)\n  }\n\n  /**\n   * Use the specified protocol extension.\n   * @param  {function} Extension\n   */\n  use (Extension) {\n    const name = Extension.prototype.name\n    if (!name) {\n      throw new Error('Extension class requires a \"name\" property on the prototype')\n    }\n    this._debug('use extension.name=%s', name)\n\n    const ext = this._nextExt\n    const handler = new Extension(this)\n\n    function noop () {}\n\n    if (typeof handler.onHandshake !== 'function') {\n      handler.onHandshake = noop\n    }\n    if (typeof handler.onExtendedHandshake !== 'function') {\n      handler.onExtendedHandshake = noop\n    }\n    if (typeof handler.onMessage !== 'function') {\n      handler.onMessage = noop\n    }\n\n    this.extendedMapping[ext] = name\n    this._ext[name] = handler\n    this[name] = handler\n\n    this._nextExt += 1\n  }\n\n  //\n  // OUTGOING MESSAGES\n  //\n\n  /**\n   * Message \"keep-alive\": <len=0000>\n   */\n  keepAlive () {\n    this._debug('keep-alive')\n    this._push(MESSAGE_KEEP_ALIVE)\n  }\n\n  /**\n   * Message: \"handshake\" <pstrlen><pstr><reserved><info_hash><peer_id>\n   * @param  {Buffer|string} infoHash (as Buffer or *hex* string)\n   * @param  {Buffer|string} peerId\n   * @param  {Object} extensions\n   */\n  handshake (infoHash, peerId, extensions) {\n    let infoHashBuffer\n    let peerIdBuffer\n    if (typeof infoHash === 'string') {\n      infoHash = infoHash.toLowerCase()\n      infoHashBuffer = Buffer.from(infoHash, 'hex')\n    } else {\n      infoHashBuffer = infoHash\n      infoHash = infoHashBuffer.toString('hex')\n    }\n    if (typeof peerId === 'string') {\n      peerIdBuffer = Buffer.from(peerId, 'hex')\n    } else {\n      peerIdBuffer = peerId\n      peerId = peerIdBuffer.toString('hex')\n    }\n\n    if (infoHashBuffer.length !== 20 || peerIdBuffer.length !== 20) {\n      throw new Error('infoHash and peerId MUST have length 20')\n    }\n\n    this._debug('handshake i=%s p=%s exts=%o', infoHash, peerId, extensions)\n\n    const reserved = Buffer.from(MESSAGE_RESERVED)\n\n    // enable extended message\n    reserved[5] |= 0x10\n\n    if (extensions && extensions.dht) reserved[7] |= 1\n\n    this._push(Buffer.concat([MESSAGE_PROTOCOL, reserved, infoHashBuffer, peerIdBuffer]))\n    this._handshakeSent = true\n\n    if (this.peerExtensions.extended && !this._extendedHandshakeSent) {\n      // Peer's handshake indicated support already\n      // (incoming connection)\n      this._sendExtendedHandshake()\n    }\n  }\n\n  /* Peer supports BEP-0010, send extended handshake.\n   *\n   * This comes after the 'handshake' event to give the user a chance to populate\n   * `this.extendedHandshake` and `this.extendedMapping` before the extended handshake\n   * is sent to the remote peer.\n   */\n  _sendExtendedHandshake () {\n    // Create extended message object from registered extensions\n    const msg = Object.assign({}, this.extendedHandshake)\n    msg.m = {}\n    for (const ext in this.extendedMapping) {\n      const name = this.extendedMapping[ext]\n      msg.m[name] = Number(ext)\n    }\n\n    // Send extended handshake\n    this.extended(0, bencode.encode(msg))\n    this._extendedHandshakeSent = true\n  }\n\n  /**\n   * Message \"choke\": <len=0001><id=0>\n   */\n  choke () {\n    if (this.amChoking) return\n    this.amChoking = true\n    this._debug('choke')\n    while (this.peerRequests.length) {\n      this.peerRequests.pop()\n    }\n    this._push(MESSAGE_CHOKE)\n  }\n\n  /**\n   * Message \"unchoke\": <len=0001><id=1>\n   */\n  unchoke () {\n    if (!this.amChoking) return\n    this.amChoking = false\n    this._debug('unchoke')\n    this._push(MESSAGE_UNCHOKE)\n  }\n\n  /**\n   * Message \"interested\": <len=0001><id=2>\n   */\n  interested () {\n    if (this.amInterested) return\n    this.amInterested = true\n    this._debug('interested')\n    this._push(MESSAGE_INTERESTED)\n  }\n\n  /**\n   * Message \"uninterested\": <len=0001><id=3>\n   */\n  uninterested () {\n    if (!this.amInterested) return\n    this.amInterested = false\n    this._debug('uninterested')\n    this._push(MESSAGE_UNINTERESTED)\n  }\n\n  /**\n   * Message \"have\": <len=0005><id=4><piece index>\n   * @param  {number} index\n   */\n  have (index) {\n    this._debug('have %d', index)\n    this._message(4, [index], null)\n  }\n\n  /**\n   * Message \"bitfield\": <len=0001+X><id=5><bitfield>\n   * @param  {BitField|Buffer} bitfield\n   */\n  bitfield (bitfield) {\n    this._debug('bitfield')\n    if (!Buffer.isBuffer(bitfield)) bitfield = bitfield.buffer\n    this._message(5, [], bitfield)\n  }\n\n  /**\n   * Message \"request\": <len=0013><id=6><index><begin><length>\n   * @param  {number}   index\n   * @param  {number}   offset\n   * @param  {number}   length\n   * @param  {function} cb\n   */\n  request (index, offset, length, cb) {\n    if (!cb) cb = () => {}\n    if (this._finished) return cb(new Error('wire is closed'))\n    if (this.peerChoking) return cb(new Error('peer is choking'))\n\n    this._debug('request index=%d offset=%d length=%d', index, offset, length)\n\n    this.requests.push(new Request(index, offset, length, cb))\n    this._updateTimeout()\n    this._message(6, [index, offset, length], null)\n  }\n\n  /**\n   * Message \"piece\": <len=0009+X><id=7><index><begin><block>\n   * @param  {number} index\n   * @param  {number} offset\n   * @param  {Buffer} buffer\n   */\n  piece (index, offset, buffer) {\n    this._debug('piece index=%d offset=%d', index, offset)\n    this.uploaded += buffer.length\n    this.uploadSpeed(buffer.length)\n    this.emit('upload', buffer.length)\n    this._message(7, [index, offset], buffer)\n  }\n\n  /**\n   * Message \"cancel\": <len=0013><id=8><index><begin><length>\n   * @param  {number} index\n   * @param  {number} offset\n   * @param  {number} length\n   */\n  cancel (index, offset, length) {\n    this._debug('cancel index=%d offset=%d length=%d', index, offset, length)\n    this._callback(\n      this._pull(this.requests, index, offset, length),\n      new Error('request was cancelled'),\n      null\n    )\n    this._message(8, [index, offset, length], null)\n  }\n\n  /**\n   * Message: \"port\" <len=0003><id=9><listen-port>\n   * @param {Number} port\n   */\n  port (port) {\n    this._debug('port %d', port)\n    const message = Buffer.from(MESSAGE_PORT)\n    message.writeUInt16BE(port, 5)\n    this._push(message)\n  }\n\n  /**\n   * Message: \"extended\" <len=0005+X><id=20><ext-number><payload>\n   * @param  {number|string} ext\n   * @param  {Object} obj\n   */\n  extended (ext, obj) {\n    this._debug('extended ext=%s', ext)\n    if (typeof ext === 'string' && this.peerExtendedMapping[ext]) {\n      ext = this.peerExtendedMapping[ext]\n    }\n    if (typeof ext === 'number') {\n      const extId = Buffer.from([ext])\n      const buf = Buffer.isBuffer(obj) ? obj : bencode.encode(obj)\n\n      this._message(20, [], Buffer.concat([extId, buf]))\n    } else {\n      throw new Error(`Unrecognized extension: ${ext}`)\n    }\n  }\n\n  /**\n   * Duplex stream method. Called whenever the remote peer stream wants data. No-op\n   * since we'll just push data whenever we get it.\n   */\n  _read () {}\n\n  /**\n   * Send a message to the remote peer.\n   */\n  _message (id, numbers, data) {\n    const dataLength = data ? data.length : 0\n    const buffer = Buffer.allocUnsafe(5 + (4 * numbers.length))\n\n    buffer.writeUInt32BE(buffer.length + dataLength - 4, 0)\n    buffer[4] = id\n    for (let i = 0; i < numbers.length; i++) {\n      buffer.writeUInt32BE(numbers[i], 5 + (4 * i))\n    }\n\n    this._push(buffer)\n    if (data) this._push(data)\n  }\n\n  _push (data) {\n    if (this._finished) return\n    return this.push(data)\n  }\n\n  //\n  // INCOMING MESSAGES\n  //\n\n  _onKeepAlive () {\n    this._debug('got keep-alive')\n    this.emit('keep-alive')\n  }\n\n  _onHandshake (infoHashBuffer, peerIdBuffer, extensions) {\n    const infoHash = infoHashBuffer.toString('hex')\n    const peerId = peerIdBuffer.toString('hex')\n\n    this._debug('got handshake i=%s p=%s exts=%o', infoHash, peerId, extensions)\n\n    this.peerId = peerId\n    this.peerIdBuffer = peerIdBuffer\n    this.peerExtensions = extensions\n\n    this.emit('handshake', infoHash, peerId, extensions)\n\n    let name\n    for (name in this._ext) {\n      this._ext[name].onHandshake(infoHash, peerId, extensions)\n    }\n\n    if (extensions.extended && this._handshakeSent &&\n        !this._extendedHandshakeSent) {\n      // outgoing connection\n      this._sendExtendedHandshake()\n    }\n  }\n\n  _onChoke () {\n    this.peerChoking = true\n    this._debug('got choke')\n    this.emit('choke')\n    while (this.requests.length) {\n      this._callback(this.requests.pop(), new Error('peer is choking'), null)\n    }\n  }\n\n  _onUnchoke () {\n    this.peerChoking = false\n    this._debug('got unchoke')\n    this.emit('unchoke')\n  }\n\n  _onInterested () {\n    this.peerInterested = true\n    this._debug('got interested')\n    this.emit('interested')\n  }\n\n  _onUninterested () {\n    this.peerInterested = false\n    this._debug('got uninterested')\n    this.emit('uninterested')\n  }\n\n  _onHave (index) {\n    if (this.peerPieces.get(index)) return\n    this._debug('got have %d', index)\n\n    this.peerPieces.set(index, true)\n    this.emit('have', index)\n  }\n\n  _onBitField (buffer) {\n    this.peerPieces = new BitField(buffer)\n    this._debug('got bitfield')\n    this.emit('bitfield', this.peerPieces)\n  }\n\n  _onRequest (index, offset, length) {\n    if (this.amChoking) return\n    this._debug('got request index=%d offset=%d length=%d', index, offset, length)\n\n    const respond = (err, buffer) => {\n      if (request !== this._pull(this.peerRequests, index, offset, length)) return\n      if (err) return this._debug('error satisfying request index=%d offset=%d length=%d (%s)', index, offset, length, err.message)\n      this.piece(index, offset, buffer)\n    }\n\n    var request = new Request(index, offset, length, respond)\n    this.peerRequests.push(request)\n    this.emit('request', index, offset, length, respond)\n  }\n\n  _onPiece (index, offset, buffer) {\n    this._debug('got piece index=%d offset=%d', index, offset)\n    this._callback(this._pull(this.requests, index, offset, buffer.length), null, buffer)\n    this.downloaded += buffer.length\n    this.downloadSpeed(buffer.length)\n    this.emit('download', buffer.length)\n    this.emit('piece', index, offset, buffer)\n  }\n\n  _onCancel (index, offset, length) {\n    this._debug('got cancel index=%d offset=%d length=%d', index, offset, length)\n    this._pull(this.peerRequests, index, offset, length)\n    this.emit('cancel', index, offset, length)\n  }\n\n  _onPort (port) {\n    this._debug('got port %d', port)\n    this.emit('port', port)\n  }\n\n  _onExtended (ext, buf) {\n    if (ext === 0) {\n      let info\n      try {\n        info = bencode.decode(buf)\n      } catch (err) {\n        this._debug('ignoring invalid extended handshake: %s', err.message || err)\n      }\n\n      if (!info) return\n      this.peerExtendedHandshake = info\n\n      let name\n      if (typeof info.m === 'object') {\n        for (name in info.m) {\n          this.peerExtendedMapping[name] = Number(info.m[name].toString())\n        }\n      }\n      for (name in this._ext) {\n        if (this.peerExtendedMapping[name]) {\n          this._ext[name].onExtendedHandshake(this.peerExtendedHandshake)\n        }\n      }\n      this._debug('got extended handshake')\n      this.emit('extended', 'handshake', this.peerExtendedHandshake)\n    } else {\n      if (this.extendedMapping[ext]) {\n        ext = this.extendedMapping[ext] // friendly name for extension\n        if (this._ext[ext]) {\n          // there is an registered extension handler, so call it\n          this._ext[ext].onMessage(buf)\n        }\n      }\n      this._debug('got extended message ext=%s', ext)\n      this.emit('extended', ext, buf)\n    }\n  }\n\n  _onTimeout () {\n    this._debug('request timed out')\n    this._callback(this.requests.shift(), new Error('request has timed out'), null)\n    this.emit('timeout')\n  }\n\n  /**\n   * Duplex stream method. Called whenever the remote peer has data for us. Data that the\n   * remote peer sends gets buffered (i.e. not actually processed) until the right number\n   * of bytes have arrived, determined by the last call to `this._parse(number, callback)`.\n   * Once enough bytes have arrived to process the message, the callback function\n   * (i.e. `this._parser`) gets called with the full buffer of data.\n   * @param  {Buffer} data\n   * @param  {string} encoding\n   * @param  {function} cb\n   */\n  _write (data, encoding, cb) {\n    this._bufferSize += data.length\n    this._buffer.push(data)\n\n    while (this._bufferSize >= this._parserSize) {\n      const buffer = (this._buffer.length === 1)\n        ? this._buffer[0]\n        : Buffer.concat(this._buffer)\n      this._bufferSize -= this._parserSize\n      this._buffer = this._bufferSize\n        ? [buffer.slice(this._parserSize)]\n        : []\n      this._parser(buffer.slice(0, this._parserSize))\n    }\n\n    cb(null) // Signal that we're ready for more data\n  }\n\n  _callback (request, err, buffer) {\n    if (!request) return\n\n    this._clearTimeout()\n\n    if (!this.peerChoking && !this._finished) this._updateTimeout()\n    request.callback(err, buffer)\n  }\n\n  _clearTimeout () {\n    if (!this._timeout) return\n\n    clearTimeout(this._timeout)\n    this._timeout = null\n  }\n\n  _updateTimeout () {\n    if (!this._timeoutMs || !this.requests.length || this._timeout) return\n\n    this._timeout = setTimeout(() => this._onTimeout(), this._timeoutMs)\n    if (this._timeoutUnref && this._timeout.unref) this._timeout.unref()\n  }\n\n  /**\n   * Takes a number of bytes that the local peer is waiting to receive from the remote peer\n   * in order to parse a complete message, and a callback function to be called once enough\n   * bytes have arrived.\n   * @param  {number} size\n   * @param  {function} parser\n   */\n  _parse (size, parser) {\n    this._parserSize = size\n    this._parser = parser\n  }\n\n  /**\n   * Handle the first 4 bytes of a message, to determine the length of bytes that must be\n   * waited for in order to have the whole message.\n   * @param  {Buffer} buffer\n   */\n  _onMessageLength (buffer) {\n    const length = buffer.readUInt32BE(0)\n    if (length > 0) {\n      this._parse(length, this._onMessage)\n    } else {\n      this._onKeepAlive()\n      this._parse(4, this._onMessageLength)\n    }\n  }\n\n  /**\n   * Handle a message from the remote peer.\n   * @param  {Buffer} buffer\n   */\n  _onMessage (buffer) {\n    this._parse(4, this._onMessageLength)\n    switch (buffer[0]) {\n      case 0:\n        return this._onChoke()\n      case 1:\n        return this._onUnchoke()\n      case 2:\n        return this._onInterested()\n      case 3:\n        return this._onUninterested()\n      case 4:\n        return this._onHave(buffer.readUInt32BE(1))\n      case 5:\n        return this._onBitField(buffer.slice(1))\n      case 6:\n        return this._onRequest(\n          buffer.readUInt32BE(1),\n          buffer.readUInt32BE(5),\n          buffer.readUInt32BE(9)\n        )\n      case 7:\n        return this._onPiece(\n          buffer.readUInt32BE(1),\n          buffer.readUInt32BE(5),\n          buffer.slice(9)\n        )\n      case 8:\n        return this._onCancel(\n          buffer.readUInt32BE(1),\n          buffer.readUInt32BE(5),\n          buffer.readUInt32BE(9)\n        )\n      case 9:\n        return this._onPort(buffer.readUInt16BE(1))\n      case 20:\n        return this._onExtended(buffer.readUInt8(1), buffer.slice(2))\n      default:\n        this._debug('got unknown message')\n        return this.emit('unknownmessage', buffer)\n    }\n  }\n\n  _parseHandshake () {\n    this._parse(1, buffer => {\n      const pstrlen = buffer.readUInt8(0)\n      this._parse(pstrlen + 48, handshake => {\n        const protocol = handshake.slice(0, pstrlen)\n        if (protocol.toString() !== 'BitTorrent protocol') {\n          this._debug('Error: wire not speaking BitTorrent protocol (%s)', protocol.toString())\n          this.end()\n          return\n        }\n        handshake = handshake.slice(pstrlen)\n        this._onHandshake(handshake.slice(8, 28), handshake.slice(28, 48), {\n          dht: !!(handshake[7] & 0x01), // see bep_0005\n          extended: !!(handshake[5] & 0x10) // see bep_0010\n        })\n        this._parse(4, this._onMessageLength)\n      })\n    })\n  }\n\n  _onFinish () {\n    this._finished = true\n\n    this.push(null) // stream cannot be half open, so signal the end of it\n    while (this.read()) {} // consume and discard the rest of the stream data\n\n    clearInterval(this._keepAliveInterval)\n    this._parse(Number.MAX_VALUE, () => {})\n    while (this.peerRequests.length) {\n      this.peerRequests.pop()\n    }\n    while (this.requests.length) {\n      this._callback(this.requests.pop(), new Error('wire was closed'), null)\n    }\n  }\n\n  _debug (...args) {\n    args[0] = `[${this._debugId}] ${args[0]}`\n    debug(...args)\n  }\n\n  _pull (requests, piece, offset, length) {\n    for (let i = 0; i < requests.length; i++) {\n      const req = requests[i]\n      if (req.piece === piece && req.offset === offset && req.length === length) {\n        arrayRemove(requests, i)\n        return req\n      }\n    }\n    return null\n  }\n}\n\nmodule.exports = Wire\n"},"lineCount":748}},"error":null,"hash":"d9b0044bc6c0aa6f666988024646b3aa","cacheData":{"env":{}}}