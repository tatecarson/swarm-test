{"id":"node_modules/mp4-box-encoding/index.js","dependencies":[{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\package.json","includedInParent":true,"mtime":1596059326965},{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mp4-box-encoding\\package.json","includedInParent":true,"mtime":1596059322662},{"name":"uint64be","loc":{"line":2,"column":23},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mp4-box-encoding\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\uint64be\\index.js"},{"name":"./boxes","loc":{"line":4,"column":20},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mp4-box-encoding\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mp4-box-encoding\\boxes.js"},{"name":"buffer","parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mp4-box-encoding\\index.js","resolved":"C:\\Users\\Tate\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// var assert = require('assert')\nvar uint64be = require('uint64be')\n\nvar boxes = require('./boxes')\n\nvar UINT32_MAX = 4294967295\n\nvar Box = exports\n\n/*\n * Lists the proper order for boxes inside containers.\n * Five-character names ending in 's' indicate arrays instead of single elements.\n */\nvar containers = exports.containers = {\n  'moov': ['mvhd', 'meta', 'traks', 'mvex'],\n  'trak': ['tkhd', 'tref', 'trgr', 'edts', 'meta', 'mdia', 'udta'],\n  'edts': ['elst'],\n  'mdia': ['mdhd', 'hdlr', 'elng', 'minf'],\n  'minf': ['vmhd', 'smhd', 'hmhd', 'sthd', 'nmhd', 'dinf', 'stbl'],\n  'dinf': ['dref'],\n  'stbl': ['stsd', 'stts', 'ctts', 'cslg', 'stsc', 'stsz', 'stz2', 'stco', 'co64', 'stss', 'stsh', 'padb', 'stdp', 'sdtp', 'sbgps', 'sgpds', 'subss', 'saizs', 'saios'],\n  'mvex': ['mehd', 'trexs', 'leva'],\n  'moof': ['mfhd', 'meta', 'trafs'],\n  'traf': ['tfhd', 'tfdt', 'trun', 'sbgps', 'sgpds', 'subss', 'saizs', 'saios', 'meta']\n}\n\nBox.encode = function (obj, buffer, offset) {\n  Box.encodingLength(obj) // sets every level appropriately\n  offset = offset || 0\n  buffer = buffer || Buffer.alloc(obj.length)\n  return Box._encode(obj, buffer, offset)\n}\n\nBox._encode = function (obj, buffer, offset) {\n  var type = obj.type\n  var len = obj.length\n  if (len > UINT32_MAX) {\n    len = 1\n  }\n  buffer.writeUInt32BE(len, offset)\n  buffer.write(obj.type, offset + 4, 4, 'ascii')\n  var ptr = offset + 8\n  if (len === 1) {\n    uint64be.encode(obj.length, buffer, ptr)\n    ptr += 8\n  }\n  if (boxes.fullBoxes[type]) {\n    buffer.writeUInt32BE(obj.flags || 0, ptr)\n    buffer.writeUInt8(obj.version || 0, ptr)\n    ptr += 4\n  }\n\n  if (containers[type]) {\n    var contents = containers[type]\n    contents.forEach(function (childType) {\n      if (childType.length === 5) {\n        var entry = obj[childType] || []\n        childType = childType.substr(0, 4)\n        entry.forEach(function (child) {\n          Box._encode(child, buffer, ptr)\n          ptr += Box.encode.bytes\n        })\n      } else if (obj[childType]) {\n        Box._encode(obj[childType], buffer, ptr)\n        ptr += Box.encode.bytes\n      }\n    })\n    if (obj.otherBoxes) {\n      obj.otherBoxes.forEach(function (child) {\n        Box._encode(child, buffer, ptr)\n        ptr += Box.encode.bytes\n      })\n    }\n  } else if (boxes[type]) {\n    var encode = boxes[type].encode\n    encode(obj, buffer, ptr)\n    ptr += encode.bytes\n  } else if (obj.buffer) {\n    var buf = obj.buffer\n    buf.copy(buffer, ptr)\n    ptr += obj.buffer.length\n  } else {\n    throw new Error('Either `type` must be set to a known type (not\\'' + type + '\\') or `buffer` must be set')\n  }\n\n  Box.encode.bytes = ptr - offset\n  // assert.equal(ptr - offset, obj.length, 'Error encoding \\'' + type + '\\': wrote ' + ptr - offset + ' bytes, expecting ' + obj.length)\n  return buffer\n}\n\n/*\n * Returns an object with `type` and `size` fields,\n * or if there isn't enough data, returns the total\n * number of bytes needed to read the headers\n */\nBox.readHeaders = function (buffer, start, end) {\n  start = start || 0\n  end = end || buffer.length\n  if (end - start < 8) {\n    return 8\n  }\n\n  var len = buffer.readUInt32BE(start)\n  var type = buffer.toString('ascii', start + 4, start + 8)\n  var ptr = start + 8\n\n  if (len === 1) {\n    if (end - start < 16) {\n      return 16\n    }\n\n    len = uint64be.decode(buffer, ptr)\n    ptr += 8\n  }\n\n  var version\n  var flags\n  if (boxes.fullBoxes[type]) {\n    version = buffer.readUInt8(ptr)\n    flags = buffer.readUInt32BE(ptr) & 0xffffff\n    ptr += 4\n  }\n\n  return {\n    length: len,\n    headersLen: ptr - start,\n    contentLen: len - (ptr - start),\n    type: type,\n    version: version,\n    flags: flags\n  }\n}\n\nBox.decode = function (buffer, start, end) {\n  start = start || 0\n  end = end || buffer.length\n  var headers = Box.readHeaders(buffer, start, end)\n  if (!headers || headers.length > end - start) {\n    throw new Error('Data too short')\n  }\n\n  return Box.decodeWithoutHeaders(headers, buffer, start + headers.headersLen, start + headers.length)\n}\n\nBox.decodeWithoutHeaders = function (headers, buffer, start, end) {\n  start = start || 0\n  end = end || buffer.length\n  var type = headers.type\n  var obj = {}\n  if (containers[type]) {\n    obj.otherBoxes = []\n    var contents = containers[type]\n    var ptr = start\n    while (end - ptr >= 8) {\n      var child = Box.decode(buffer, ptr, end)\n      ptr += child.length\n      if (contents.indexOf(child.type) >= 0) {\n        obj[child.type] = child\n      } else if (contents.indexOf(child.type + 's') >= 0) {\n        var childType = child.type + 's'\n        var entry = obj[childType] = obj[childType] || []\n        entry.push(child)\n      } else {\n        obj.otherBoxes.push(child)\n      }\n    }\n  } else if (boxes[type]) {\n    var decode = boxes[type].decode\n    obj = decode(buffer, start, end)\n  } else {\n    obj.buffer = Buffer.from(buffer.slice(start, end))\n  }\n\n  obj.length = headers.length\n  obj.contentLen = headers.contentLen\n  obj.type = headers.type\n  obj.version = headers.version\n  obj.flags = headers.flags\n  return obj\n}\n\nBox.encodingLength = function (obj) {\n  var type = obj.type\n\n  var len = 8\n  if (boxes.fullBoxes[type]) {\n    len += 4\n  }\n\n  if (containers[type]) {\n    var contents = containers[type]\n    contents.forEach(function (childType) {\n      if (childType.length === 5) {\n        var entry = obj[childType] || []\n        childType = childType.substr(0, 4)\n        entry.forEach(function (child) {\n          child.type = childType\n          len += Box.encodingLength(child)\n        })\n      } else if (obj[childType]) {\n        var child = obj[childType]\n        child.type = childType\n        len += Box.encodingLength(child)\n      }\n    })\n    if (obj.otherBoxes) {\n      obj.otherBoxes.forEach(function (child) {\n        len += Box.encodingLength(child)\n      })\n    }\n  } else if (boxes[type]) {\n    len += boxes[type].encodingLength(obj)\n  } else if (obj.buffer) {\n    len += obj.buffer.length\n  } else {\n    throw new Error('Either `type` must be set to a known type (not\\'' + type + '\\') or `buffer` must be set')\n  }\n\n  if (len > UINT32_MAX) {\n    len += 8\n  }\n\n  obj.length = len\n  return len\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mp4-box-encoding/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}}],"sources":{"node_modules/mp4-box-encoding/index.js":"// var assert = require('assert')\nvar uint64be = require('uint64be')\n\nvar boxes = require('./boxes')\n\nvar UINT32_MAX = 4294967295\n\nvar Box = exports\n\n/*\n * Lists the proper order for boxes inside containers.\n * Five-character names ending in 's' indicate arrays instead of single elements.\n */\nvar containers = exports.containers = {\n  'moov': ['mvhd', 'meta', 'traks', 'mvex'],\n  'trak': ['tkhd', 'tref', 'trgr', 'edts', 'meta', 'mdia', 'udta'],\n  'edts': ['elst'],\n  'mdia': ['mdhd', 'hdlr', 'elng', 'minf'],\n  'minf': ['vmhd', 'smhd', 'hmhd', 'sthd', 'nmhd', 'dinf', 'stbl'],\n  'dinf': ['dref'],\n  'stbl': ['stsd', 'stts', 'ctts', 'cslg', 'stsc', 'stsz', 'stz2', 'stco', 'co64', 'stss', 'stsh', 'padb', 'stdp', 'sdtp', 'sbgps', 'sgpds', 'subss', 'saizs', 'saios'],\n  'mvex': ['mehd', 'trexs', 'leva'],\n  'moof': ['mfhd', 'meta', 'trafs'],\n  'traf': ['tfhd', 'tfdt', 'trun', 'sbgps', 'sgpds', 'subss', 'saizs', 'saios', 'meta']\n}\n\nBox.encode = function (obj, buffer, offset) {\n  Box.encodingLength(obj) // sets every level appropriately\n  offset = offset || 0\n  buffer = buffer || Buffer.alloc(obj.length)\n  return Box._encode(obj, buffer, offset)\n}\n\nBox._encode = function (obj, buffer, offset) {\n  var type = obj.type\n  var len = obj.length\n  if (len > UINT32_MAX) {\n    len = 1\n  }\n  buffer.writeUInt32BE(len, offset)\n  buffer.write(obj.type, offset + 4, 4, 'ascii')\n  var ptr = offset + 8\n  if (len === 1) {\n    uint64be.encode(obj.length, buffer, ptr)\n    ptr += 8\n  }\n  if (boxes.fullBoxes[type]) {\n    buffer.writeUInt32BE(obj.flags || 0, ptr)\n    buffer.writeUInt8(obj.version || 0, ptr)\n    ptr += 4\n  }\n\n  if (containers[type]) {\n    var contents = containers[type]\n    contents.forEach(function (childType) {\n      if (childType.length === 5) {\n        var entry = obj[childType] || []\n        childType = childType.substr(0, 4)\n        entry.forEach(function (child) {\n          Box._encode(child, buffer, ptr)\n          ptr += Box.encode.bytes\n        })\n      } else if (obj[childType]) {\n        Box._encode(obj[childType], buffer, ptr)\n        ptr += Box.encode.bytes\n      }\n    })\n    if (obj.otherBoxes) {\n      obj.otherBoxes.forEach(function (child) {\n        Box._encode(child, buffer, ptr)\n        ptr += Box.encode.bytes\n      })\n    }\n  } else if (boxes[type]) {\n    var encode = boxes[type].encode\n    encode(obj, buffer, ptr)\n    ptr += encode.bytes\n  } else if (obj.buffer) {\n    var buf = obj.buffer\n    buf.copy(buffer, ptr)\n    ptr += obj.buffer.length\n  } else {\n    throw new Error('Either `type` must be set to a known type (not\\'' + type + '\\') or `buffer` must be set')\n  }\n\n  Box.encode.bytes = ptr - offset\n  // assert.equal(ptr - offset, obj.length, 'Error encoding \\'' + type + '\\': wrote ' + ptr - offset + ' bytes, expecting ' + obj.length)\n  return buffer\n}\n\n/*\n * Returns an object with `type` and `size` fields,\n * or if there isn't enough data, returns the total\n * number of bytes needed to read the headers\n */\nBox.readHeaders = function (buffer, start, end) {\n  start = start || 0\n  end = end || buffer.length\n  if (end - start < 8) {\n    return 8\n  }\n\n  var len = buffer.readUInt32BE(start)\n  var type = buffer.toString('ascii', start + 4, start + 8)\n  var ptr = start + 8\n\n  if (len === 1) {\n    if (end - start < 16) {\n      return 16\n    }\n\n    len = uint64be.decode(buffer, ptr)\n    ptr += 8\n  }\n\n  var version\n  var flags\n  if (boxes.fullBoxes[type]) {\n    version = buffer.readUInt8(ptr)\n    flags = buffer.readUInt32BE(ptr) & 0xffffff\n    ptr += 4\n  }\n\n  return {\n    length: len,\n    headersLen: ptr - start,\n    contentLen: len - (ptr - start),\n    type: type,\n    version: version,\n    flags: flags\n  }\n}\n\nBox.decode = function (buffer, start, end) {\n  start = start || 0\n  end = end || buffer.length\n  var headers = Box.readHeaders(buffer, start, end)\n  if (!headers || headers.length > end - start) {\n    throw new Error('Data too short')\n  }\n\n  return Box.decodeWithoutHeaders(headers, buffer, start + headers.headersLen, start + headers.length)\n}\n\nBox.decodeWithoutHeaders = function (headers, buffer, start, end) {\n  start = start || 0\n  end = end || buffer.length\n  var type = headers.type\n  var obj = {}\n  if (containers[type]) {\n    obj.otherBoxes = []\n    var contents = containers[type]\n    var ptr = start\n    while (end - ptr >= 8) {\n      var child = Box.decode(buffer, ptr, end)\n      ptr += child.length\n      if (contents.indexOf(child.type) >= 0) {\n        obj[child.type] = child\n      } else if (contents.indexOf(child.type + 's') >= 0) {\n        var childType = child.type + 's'\n        var entry = obj[childType] = obj[childType] || []\n        entry.push(child)\n      } else {\n        obj.otherBoxes.push(child)\n      }\n    }\n  } else if (boxes[type]) {\n    var decode = boxes[type].decode\n    obj = decode(buffer, start, end)\n  } else {\n    obj.buffer = Buffer.from(buffer.slice(start, end))\n  }\n\n  obj.length = headers.length\n  obj.contentLen = headers.contentLen\n  obj.type = headers.type\n  obj.version = headers.version\n  obj.flags = headers.flags\n  return obj\n}\n\nBox.encodingLength = function (obj) {\n  var type = obj.type\n\n  var len = 8\n  if (boxes.fullBoxes[type]) {\n    len += 4\n  }\n\n  if (containers[type]) {\n    var contents = containers[type]\n    contents.forEach(function (childType) {\n      if (childType.length === 5) {\n        var entry = obj[childType] || []\n        childType = childType.substr(0, 4)\n        entry.forEach(function (child) {\n          child.type = childType\n          len += Box.encodingLength(child)\n        })\n      } else if (obj[childType]) {\n        var child = obj[childType]\n        child.type = childType\n        len += Box.encodingLength(child)\n      }\n    })\n    if (obj.otherBoxes) {\n      obj.otherBoxes.forEach(function (child) {\n        len += Box.encodingLength(child)\n      })\n    }\n  } else if (boxes[type]) {\n    len += boxes[type].encodingLength(obj)\n  } else if (obj.buffer) {\n    len += obj.buffer.length\n  } else {\n    throw new Error('Either `type` must be set to a known type (not\\'' + type + '\\') or `buffer` must be set')\n  }\n\n  if (len > UINT32_MAX) {\n    len += 8\n  }\n\n  obj.length = len\n  return len\n}\n"},"lineCount":227}},"error":null,"hash":"3f7c31be519ddffcd2f594d01832a477","cacheData":{"env":{}}}