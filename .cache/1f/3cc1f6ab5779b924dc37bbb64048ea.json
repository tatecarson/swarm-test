{"id":"node_modules/immediate-chunk-store/index.js","dependencies":[{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\package.json","includedInParent":true,"mtime":1596059326965},{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\immediate-chunk-store\\package.json","includedInParent":true,"mtime":1596059322592},{"name":"queue-microtask","loc":{"line":2,"column":31},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\immediate-chunk-store\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\queue-microtask\\index.js"}],"generated":{"js":"// TODO: remove when window.queueMicrotask() is well supported\nconst queueMicrotask = require('queue-microtask')\n\nclass ImmediateStore {\n  constructor (store) {\n    this.store = store\n    this.chunkLength = store.chunkLength\n\n    if (!this.store || !this.store.get || !this.store.put) {\n      throw new Error('First argument must be abstract-chunk-store compliant')\n    }\n\n    this.mem = []\n  }\n\n  put (index, buf, cb) {\n    this.mem[index] = buf\n    this.store.put(index, buf, err => {\n      this.mem[index] = null\n      if (cb) cb(err)\n    })\n  }\n\n  get (index, opts, cb) {\n    if (typeof opts === 'function') return this.get(index, null, opts)\n\n    let memoryBuffer = this.mem[index]\n\n    // if the chunk isn't in the immediate memory cache\n    if (!memoryBuffer) {\n      return this.store.get(index, opts, cb)\n    }\n\n    if (opts) {\n      const start = opts.offset || 0\n      const end = opts.length ? (start + opts.length) : memoryBuffer.length\n\n      memoryBuffer = memoryBuffer.slice(start, end)\n    }\n\n    // queueMicrotask to ensure the function is async\n    queueMicrotask(() => {\n      if (cb) cb(null, memoryBuffer)\n    })\n  }\n\n  close (cb) {\n    this.store.close(cb)\n  }\n\n  destroy (cb) {\n    this.store.destroy(cb)\n  }\n}\n\nmodule.exports = ImmediateStore\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/immediate-chunk-store/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"node_modules/immediate-chunk-store/index.js":"// TODO: remove when window.queueMicrotask() is well supported\nconst queueMicrotask = require('queue-microtask')\n\nclass ImmediateStore {\n  constructor (store) {\n    this.store = store\n    this.chunkLength = store.chunkLength\n\n    if (!this.store || !this.store.get || !this.store.put) {\n      throw new Error('First argument must be abstract-chunk-store compliant')\n    }\n\n    this.mem = []\n  }\n\n  put (index, buf, cb) {\n    this.mem[index] = buf\n    this.store.put(index, buf, err => {\n      this.mem[index] = null\n      if (cb) cb(err)\n    })\n  }\n\n  get (index, opts, cb) {\n    if (typeof opts === 'function') return this.get(index, null, opts)\n\n    let memoryBuffer = this.mem[index]\n\n    // if the chunk isn't in the immediate memory cache\n    if (!memoryBuffer) {\n      return this.store.get(index, opts, cb)\n    }\n\n    if (opts) {\n      const start = opts.offset || 0\n      const end = opts.length ? (start + opts.length) : memoryBuffer.length\n\n      memoryBuffer = memoryBuffer.slice(start, end)\n    }\n\n    // queueMicrotask to ensure the function is async\n    queueMicrotask(() => {\n      if (cb) cb(null, memoryBuffer)\n    })\n  }\n\n  close (cb) {\n    this.store.close(cb)\n  }\n\n  destroy (cb) {\n    this.store.destroy(cb)\n  }\n}\n\nmodule.exports = ImmediateStore\n"},"lineCount":57}},"error":null,"hash":"218a2738cdc7f3b88def65b25727839e","cacheData":{"env":{}}}