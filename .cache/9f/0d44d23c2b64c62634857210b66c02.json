{"id":"node_modules/mediasource/index.js","dependencies":[{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\package.json","includedInParent":true,"mtime":1596059326965},{"name":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mediasource\\package.json","includedInParent":true,"mtime":1596059322682},{"name":"inherits","loc":{"line":3,"column":23},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mediasource\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\inherits\\inherits_browser.js"},{"name":"readable-stream","loc":{"line":4,"column":21},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mediasource\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\readable-stream\\readable-browser.js"},{"name":"to-arraybuffer","loc":{"line":5,"column":28},"parent":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\mediasource\\index.js","resolved":"C:\\Users\\Tate\\Documents\\swarm-test\\node_modules\\to-arraybuffer\\index.js"}],"generated":{"js":"module.exports = MediaElementWrapper\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar MediaSource = typeof window !== 'undefined' && window.MediaSource\n\nvar DEFAULT_BUFFER_DURATION = 60 // seconds\n\nfunction MediaElementWrapper (elem, opts) {\n  var self = this\n  if (!(self instanceof MediaElementWrapper)) return new MediaElementWrapper(elem, opts)\n\n  if (!MediaSource) throw new Error('web browser lacks MediaSource support')\n\n  if (!opts) opts = {}\n  self._debug = opts.debug\n  self._bufferDuration = opts.bufferDuration || DEFAULT_BUFFER_DURATION\n  self._elem = elem\n  self._mediaSource = new MediaSource()\n  self._streams = []\n  self.detailedError = null\n\n  self._errorHandler = function () {\n    self._elem.removeEventListener('error', self._errorHandler)\n    var streams = self._streams.slice()\n    streams.forEach(function (stream) {\n      stream.destroy(self._elem.error)\n    })\n  }\n  self._elem.addEventListener('error', self._errorHandler)\n\n  self._elem.src = window.URL.createObjectURL(self._mediaSource)\n}\n\n/*\n * `obj` can be a previous value returned by this function\n * or a string\n */\nMediaElementWrapper.prototype.createWriteStream = function (obj) {\n  var self = this\n\n  return new MediaSourceStream(self, obj)\n}\n\n/*\n * Use to trigger an error on the underlying media element\n */\nMediaElementWrapper.prototype.error = function (err) {\n  var self = this\n\n  // be careful not to overwrite any existing detailedError values\n  if (!self.detailedError) {\n    self.detailedError = err\n  }\n  self._dumpDebugData()\n  try {\n    self._mediaSource.endOfStream('decode')\n  } catch (err) {}\n\n  try {\n    // Attempt to clean up object URL\n    window.URL.revokeObjectURL(self._elem.src)\n  } catch (err) {}\n}\n\n/*\n * When self._debug is set, dump all data to files\n */\nMediaElementWrapper.prototype._dumpDebugData = function () {\n  var self = this\n\n  if (self._debug) {\n    self._debug = false // prevent multiple dumps on multiple errors\n    self._streams.forEach(function (stream, i) {\n      downloadBuffers(stream._debugBuffers, 'mediasource-stream-' + i)\n    })\n  }\n}\n\ninherits(MediaSourceStream, stream.Writable)\n\nfunction MediaSourceStream (wrapper, obj) {\n  var self = this\n  stream.Writable.call(self)\n\n  self._wrapper = wrapper\n  self._elem = wrapper._elem\n  self._mediaSource = wrapper._mediaSource\n  self._allStreams = wrapper._streams\n  self._allStreams.push(self)\n  self._bufferDuration = wrapper._bufferDuration\n  self._sourceBuffer = null\n  self._debugBuffers = []\n\n  self._openHandler = function () {\n    self._onSourceOpen()\n  }\n  self._flowHandler = function () {\n    self._flow()\n  }\n  self._errorHandler = function (err) {\n    if (!self.destroyed) {\n      self.emit('error', err)\n    }\n  }\n\n  if (typeof obj === 'string') {\n    self._type = obj\n    // Need to create a new sourceBuffer\n    if (self._mediaSource.readyState === 'open') {\n      self._createSourceBuffer()\n    } else {\n      self._mediaSource.addEventListener('sourceopen', self._openHandler)\n    }\n  } else if (obj._sourceBuffer === null) {\n    obj.destroy()\n    self._type = obj._type // The old stream was created but hasn't finished initializing\n    self._mediaSource.addEventListener('sourceopen', self._openHandler)\n  } else if (obj._sourceBuffer) {\n    obj.destroy()\n    self._type = obj._type\n    self._sourceBuffer = obj._sourceBuffer // Copy over the old sourceBuffer\n    self._debugBuffers = obj._debugBuffers // Copy over previous debug data\n    self._sourceBuffer.addEventListener('updateend', self._flowHandler)\n    self._sourceBuffer.addEventListener('error', self._errorHandler)\n  } else {\n    throw new Error('The argument to MediaElementWrapper.createWriteStream must be a string or a previous stream returned from that function')\n  }\n\n  self._elem.addEventListener('timeupdate', self._flowHandler)\n\n  self.on('error', function (err) {\n    self._wrapper.error(err)\n  })\n\n  self.on('finish', function () {\n    if (self.destroyed) return\n    self._finished = true\n    if (self._allStreams.every(function (other) { return other._finished })) {\n      self._wrapper._dumpDebugData()\n      try {\n        self._mediaSource.endOfStream()\n      } catch (err) {}\n    }\n  })\n}\n\nMediaSourceStream.prototype._onSourceOpen = function () {\n  var self = this\n  if (self.destroyed) return\n\n  self._mediaSource.removeEventListener('sourceopen', self._openHandler)\n  self._createSourceBuffer()\n}\n\nMediaSourceStream.prototype.destroy = function (err) {\n  var self = this\n  if (self.destroyed) return\n  self.destroyed = true\n\n  // Remove from allStreams\n  self._allStreams.splice(self._allStreams.indexOf(self), 1)\n\n  self._mediaSource.removeEventListener('sourceopen', self._openHandler)\n  self._elem.removeEventListener('timeupdate', self._flowHandler)\n  if (self._sourceBuffer) {\n    self._sourceBuffer.removeEventListener('updateend', self._flowHandler)\n    self._sourceBuffer.removeEventListener('error', self._errorHandler)\n    if (self._mediaSource.readyState === 'open') {\n      self._sourceBuffer.abort()\n    }\n  }\n\n  if (err) self.emit('error', err)\n  self.emit('close')\n}\n\nMediaSourceStream.prototype._createSourceBuffer = function () {\n  var self = this\n  if (self.destroyed) return\n\n  if (MediaSource.isTypeSupported(self._type)) {\n    self._sourceBuffer = self._mediaSource.addSourceBuffer(self._type)\n    self._sourceBuffer.addEventListener('updateend', self._flowHandler)\n    self._sourceBuffer.addEventListener('error', self._errorHandler)\n    if (self._cb) {\n      var cb = self._cb\n      self._cb = null\n      cb()\n    }\n  } else {\n    self.destroy(new Error('The provided type is not supported'))\n  }\n}\n\nMediaSourceStream.prototype._write = function (chunk, encoding, cb) {\n  var self = this\n  if (self.destroyed) return\n  if (!self._sourceBuffer) {\n    self._cb = function (err) {\n      if (err) return cb(err)\n      self._write(chunk, encoding, cb)\n    }\n    return\n  }\n\n  if (self._sourceBuffer.updating) {\n    return cb(new Error('Cannot append buffer while source buffer updating'))\n  }\n\n  var arr = toArrayBuffer(chunk)\n  if (self._wrapper._debug) {\n    self._debugBuffers.push(arr)\n  }\n\n  try {\n    self._sourceBuffer.appendBuffer(arr)\n  } catch (err) {\n    // appendBuffer can throw for a number of reasons, most notably when the data\n    // being appended is invalid or if appendBuffer is called after another error\n    // already occurred on the media element. In Chrome, there may be useful debugging\n    // info in chrome://media-internals\n    self.destroy(err)\n    return\n  }\n  self._cb = cb\n}\n\nMediaSourceStream.prototype._flow = function () {\n  var self = this\n\n  if (self.destroyed || !self._sourceBuffer || self._sourceBuffer.updating) {\n    return\n  }\n\n  if (self._mediaSource.readyState === 'open') {\n    // check buffer size\n    if (self._getBufferDuration() > self._bufferDuration) {\n      return\n    }\n  }\n\n  if (self._cb) {\n    var cb = self._cb\n    self._cb = null\n    cb()\n  }\n}\n\n// TODO: if zero actually works in all browsers, remove the logic associated with this below\nvar EPSILON = 0\n\nMediaSourceStream.prototype._getBufferDuration = function () {\n  var self = this\n\n  var buffered = self._sourceBuffer.buffered\n  var currentTime = self._elem.currentTime\n  var bufferEnd = -1 // end of the buffer\n  // This is a little over complex because some browsers seem to separate the\n  // buffered region into multiple sections with slight gaps.\n  for (var i = 0; i < buffered.length; i++) {\n    var start = buffered.start(i)\n    var end = buffered.end(i) + EPSILON\n\n    if (start > currentTime) {\n      // Reached past the joined buffer\n      break\n    } else if (bufferEnd >= 0 || currentTime <= end) {\n      // Found the start/continuation of the joined buffer\n      bufferEnd = end\n    }\n  }\n\n  var bufferedTime = bufferEnd - currentTime\n  if (bufferedTime < 0) {\n    bufferedTime = 0\n  }\n\n  return bufferedTime\n}\n\nfunction downloadBuffers (bufs, name) {\n  var a = document.createElement('a')\n  a.href = window.URL.createObjectURL(new window.Blob(bufs))\n  a.download = name\n  a.click()\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mediasource/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mediasource/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}}],"sources":{"node_modules/mediasource/index.js":"module.exports = MediaElementWrapper\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar MediaSource = typeof window !== 'undefined' && window.MediaSource\n\nvar DEFAULT_BUFFER_DURATION = 60 // seconds\n\nfunction MediaElementWrapper (elem, opts) {\n  var self = this\n  if (!(self instanceof MediaElementWrapper)) return new MediaElementWrapper(elem, opts)\n\n  if (!MediaSource) throw new Error('web browser lacks MediaSource support')\n\n  if (!opts) opts = {}\n  self._debug = opts.debug\n  self._bufferDuration = opts.bufferDuration || DEFAULT_BUFFER_DURATION\n  self._elem = elem\n  self._mediaSource = new MediaSource()\n  self._streams = []\n  self.detailedError = null\n\n  self._errorHandler = function () {\n    self._elem.removeEventListener('error', self._errorHandler)\n    var streams = self._streams.slice()\n    streams.forEach(function (stream) {\n      stream.destroy(self._elem.error)\n    })\n  }\n  self._elem.addEventListener('error', self._errorHandler)\n\n  self._elem.src = window.URL.createObjectURL(self._mediaSource)\n}\n\n/*\n * `obj` can be a previous value returned by this function\n * or a string\n */\nMediaElementWrapper.prototype.createWriteStream = function (obj) {\n  var self = this\n\n  return new MediaSourceStream(self, obj)\n}\n\n/*\n * Use to trigger an error on the underlying media element\n */\nMediaElementWrapper.prototype.error = function (err) {\n  var self = this\n\n  // be careful not to overwrite any existing detailedError values\n  if (!self.detailedError) {\n    self.detailedError = err\n  }\n  self._dumpDebugData()\n  try {\n    self._mediaSource.endOfStream('decode')\n  } catch (err) {}\n\n  try {\n    // Attempt to clean up object URL\n    window.URL.revokeObjectURL(self._elem.src)\n  } catch (err) {}\n}\n\n/*\n * When self._debug is set, dump all data to files\n */\nMediaElementWrapper.prototype._dumpDebugData = function () {\n  var self = this\n\n  if (self._debug) {\n    self._debug = false // prevent multiple dumps on multiple errors\n    self._streams.forEach(function (stream, i) {\n      downloadBuffers(stream._debugBuffers, 'mediasource-stream-' + i)\n    })\n  }\n}\n\ninherits(MediaSourceStream, stream.Writable)\n\nfunction MediaSourceStream (wrapper, obj) {\n  var self = this\n  stream.Writable.call(self)\n\n  self._wrapper = wrapper\n  self._elem = wrapper._elem\n  self._mediaSource = wrapper._mediaSource\n  self._allStreams = wrapper._streams\n  self._allStreams.push(self)\n  self._bufferDuration = wrapper._bufferDuration\n  self._sourceBuffer = null\n  self._debugBuffers = []\n\n  self._openHandler = function () {\n    self._onSourceOpen()\n  }\n  self._flowHandler = function () {\n    self._flow()\n  }\n  self._errorHandler = function (err) {\n    if (!self.destroyed) {\n      self.emit('error', err)\n    }\n  }\n\n  if (typeof obj === 'string') {\n    self._type = obj\n    // Need to create a new sourceBuffer\n    if (self._mediaSource.readyState === 'open') {\n      self._createSourceBuffer()\n    } else {\n      self._mediaSource.addEventListener('sourceopen', self._openHandler)\n    }\n  } else if (obj._sourceBuffer === null) {\n    obj.destroy()\n    self._type = obj._type // The old stream was created but hasn't finished initializing\n    self._mediaSource.addEventListener('sourceopen', self._openHandler)\n  } else if (obj._sourceBuffer) {\n    obj.destroy()\n    self._type = obj._type\n    self._sourceBuffer = obj._sourceBuffer // Copy over the old sourceBuffer\n    self._debugBuffers = obj._debugBuffers // Copy over previous debug data\n    self._sourceBuffer.addEventListener('updateend', self._flowHandler)\n    self._sourceBuffer.addEventListener('error', self._errorHandler)\n  } else {\n    throw new Error('The argument to MediaElementWrapper.createWriteStream must be a string or a previous stream returned from that function')\n  }\n\n  self._elem.addEventListener('timeupdate', self._flowHandler)\n\n  self.on('error', function (err) {\n    self._wrapper.error(err)\n  })\n\n  self.on('finish', function () {\n    if (self.destroyed) return\n    self._finished = true\n    if (self._allStreams.every(function (other) { return other._finished })) {\n      self._wrapper._dumpDebugData()\n      try {\n        self._mediaSource.endOfStream()\n      } catch (err) {}\n    }\n  })\n}\n\nMediaSourceStream.prototype._onSourceOpen = function () {\n  var self = this\n  if (self.destroyed) return\n\n  self._mediaSource.removeEventListener('sourceopen', self._openHandler)\n  self._createSourceBuffer()\n}\n\nMediaSourceStream.prototype.destroy = function (err) {\n  var self = this\n  if (self.destroyed) return\n  self.destroyed = true\n\n  // Remove from allStreams\n  self._allStreams.splice(self._allStreams.indexOf(self), 1)\n\n  self._mediaSource.removeEventListener('sourceopen', self._openHandler)\n  self._elem.removeEventListener('timeupdate', self._flowHandler)\n  if (self._sourceBuffer) {\n    self._sourceBuffer.removeEventListener('updateend', self._flowHandler)\n    self._sourceBuffer.removeEventListener('error', self._errorHandler)\n    if (self._mediaSource.readyState === 'open') {\n      self._sourceBuffer.abort()\n    }\n  }\n\n  if (err) self.emit('error', err)\n  self.emit('close')\n}\n\nMediaSourceStream.prototype._createSourceBuffer = function () {\n  var self = this\n  if (self.destroyed) return\n\n  if (MediaSource.isTypeSupported(self._type)) {\n    self._sourceBuffer = self._mediaSource.addSourceBuffer(self._type)\n    self._sourceBuffer.addEventListener('updateend', self._flowHandler)\n    self._sourceBuffer.addEventListener('error', self._errorHandler)\n    if (self._cb) {\n      var cb = self._cb\n      self._cb = null\n      cb()\n    }\n  } else {\n    self.destroy(new Error('The provided type is not supported'))\n  }\n}\n\nMediaSourceStream.prototype._write = function (chunk, encoding, cb) {\n  var self = this\n  if (self.destroyed) return\n  if (!self._sourceBuffer) {\n    self._cb = function (err) {\n      if (err) return cb(err)\n      self._write(chunk, encoding, cb)\n    }\n    return\n  }\n\n  if (self._sourceBuffer.updating) {\n    return cb(new Error('Cannot append buffer while source buffer updating'))\n  }\n\n  var arr = toArrayBuffer(chunk)\n  if (self._wrapper._debug) {\n    self._debugBuffers.push(arr)\n  }\n\n  try {\n    self._sourceBuffer.appendBuffer(arr)\n  } catch (err) {\n    // appendBuffer can throw for a number of reasons, most notably when the data\n    // being appended is invalid or if appendBuffer is called after another error\n    // already occurred on the media element. In Chrome, there may be useful debugging\n    // info in chrome://media-internals\n    self.destroy(err)\n    return\n  }\n  self._cb = cb\n}\n\nMediaSourceStream.prototype._flow = function () {\n  var self = this\n\n  if (self.destroyed || !self._sourceBuffer || self._sourceBuffer.updating) {\n    return\n  }\n\n  if (self._mediaSource.readyState === 'open') {\n    // check buffer size\n    if (self._getBufferDuration() > self._bufferDuration) {\n      return\n    }\n  }\n\n  if (self._cb) {\n    var cb = self._cb\n    self._cb = null\n    cb()\n  }\n}\n\n// TODO: if zero actually works in all browsers, remove the logic associated with this below\nvar EPSILON = 0\n\nMediaSourceStream.prototype._getBufferDuration = function () {\n  var self = this\n\n  var buffered = self._sourceBuffer.buffered\n  var currentTime = self._elem.currentTime\n  var bufferEnd = -1 // end of the buffer\n  // This is a little over complex because some browsers seem to separate the\n  // buffered region into multiple sections with slight gaps.\n  for (var i = 0; i < buffered.length; i++) {\n    var start = buffered.start(i)\n    var end = buffered.end(i) + EPSILON\n\n    if (start > currentTime) {\n      // Reached past the joined buffer\n      break\n    } else if (bufferEnd >= 0 || currentTime <= end) {\n      // Found the start/continuation of the joined buffer\n      bufferEnd = end\n    }\n  }\n\n  var bufferedTime = bufferEnd - currentTime\n  if (bufferedTime < 0) {\n    bufferedTime = 0\n  }\n\n  return bufferedTime\n}\n\nfunction downloadBuffers (bufs, name) {\n  var a = document.createElement('a')\n  a.href = window.URL.createObjectURL(new window.Blob(bufs))\n  a.download = name\n  a.click()\n}\n"},"lineCount":290}},"error":null,"hash":"ffe80b45c7639f0c2f008a85d636ba59","cacheData":{"env":{}}}